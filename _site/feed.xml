<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://sliencejoker.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://sliencejoker.github.io/" rel="alternate" type="text/html" /><updated>2021-06-27T15:13:27+08:00</updated><id>http://sliencejoker.github.io/feed.xml</id><title type="html">Aries の Blog</title><subtitle>Themed by ejjoo &lt;br /&gt; Used by Joker丶阿楷</subtitle><entry><title type="html">Java开源技术栈总结</title><link href="http://sliencejoker.github.io/java/2021/06/26/JAVA%E5%BC%80%E6%BA%90%E6%8A%80%E6%9C%AF%E6%A0%88%E6%80%BB%E7%BB%93.html" rel="alternate" type="text/html" title="Java开源技术栈总结" /><published>2021-06-26T19:00:00+08:00</published><updated>2021-06-26T19:00:00+08:00</updated><id>http://sliencejoker.github.io/java/2021/06/26/JAVA%E5%BC%80%E6%BA%90%E6%8A%80%E6%9C%AF%E6%A0%88%E6%80%BB%E7%BB%93</id><content type="html" xml:base="http://sliencejoker.github.io/java/2021/06/26/JAVA%E5%BC%80%E6%BA%90%E6%8A%80%E6%9C%AF%E6%A0%88%E6%80%BB%E7%BB%93.html">&lt;blockquote&gt;
  &lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
  &lt;p&gt;  作为一个Java程序员兼技术狂热爱好者，热衷于接触各种各样的新技术，由于现阶段想自己动手写一个项目，工欲善其事必先利其器，总结一下项目可能会用到的各种技术栈，同时也是为了完全拥抱开源，故动手水一篇文章。&lt;/p&gt;
  &lt;h3 id=&quot;java技术栈总结&quot;&gt;Java技术栈总结&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;后端框架
      &lt;ul&gt;
        &lt;li&gt;Spring Boot&lt;br /&gt;
大名鼎鼎，如雷贯耳。玩Java的没有不知道这个技术栈的。如果有，那可能就是我太垃圾了。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;数据库持久层框架
      &lt;ul&gt;
        &lt;li&gt;Mybatis&lt;br /&gt;
ORM框架，其核心是对JDBC的二次封装，相较于JDBC这种硬代码的方式查询数据库，Mybatis可以使用xml方式实现SQL语句与代码的分离，便于维护。同时其衍生Mybatis Generator(逆向解析生成代码工具)、Mybatis Plus(基于Mybatis的二次开发，简化增删查改操作)也是特别优秀的框架。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Web框架
      &lt;ul&gt;
        &lt;li&gt;Spring Web MVC&lt;br /&gt;
SSM框架是相当成熟的技术框架，常用于企业项目的开发，经得起时间的检验。不过MVC配置学习成本相对较高，xml文件配置繁琐，而Spring Boot进一步简化了MVC的繁琐的配置方式，代码加注解的配置方式更受本人这个编程菜鸡的喜爱。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;中间件
      &lt;ul&gt;
        &lt;li&gt;Tomcat&lt;br /&gt;
这就不用多说了，容器中间件，Spring Boot也有其推荐的容器中间件，没有这个容器中间件，项目没办法跑起来。反正程序和程序员，只要有一个能跑就行。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;h3 id=&quot;终章感言&quot;&gt;终章感言&lt;/h3&gt;
  &lt;p&gt;  写完这篇文章发现自己真的是一个小菜鸡。小不点儿，钱途无亮。赶紧自己动手把构思中的项目给它撸出来。这样也能提升提升个人技术能力。哎。。。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="java" /><summary type="html">撰写缘由   作为一个Java程序员兼技术狂热爱好者，热衷于接触各种各样的新技术，由于现阶段想自己动手写一个项目，工欲善其事必先利其器，总结一下项目可能会用到的各种技术栈，同时也是为了完全拥抱开源，故动手水一篇文章。 Java技术栈总结 后端框架 Spring Boot 大名鼎鼎，如雷贯耳。玩Java的没有不知道这个技术栈的。如果有，那可能就是我太垃圾了。 数据库持久层框架 Mybatis ORM框架，其核心是对JDBC的二次封装，相较于JDBC这种硬代码的方式查询数据库，Mybatis可以使用xml方式实现SQL语句与代码的分离，便于维护。同时其衍生Mybatis Generator(逆向解析生成代码工具)、Mybatis Plus(基于Mybatis的二次开发，简化增删查改操作)也是特别优秀的框架。 Web框架 Spring Web MVC SSM框架是相当成熟的技术框架，常用于企业项目的开发，经得起时间的检验。不过MVC配置学习成本相对较高，xml文件配置繁琐，而Spring Boot进一步简化了MVC的繁琐的配置方式，代码加注解的配置方式更受本人这个编程菜鸡的喜爱。 中间件 Tomcat 这就不用多说了，容器中间件，Spring Boot也有其推荐的容器中间件，没有这个容器中间件，项目没办法跑起来。反正程序和程序员，只要有一个能跑就行。 终章感言   写完这篇文章发现自己真的是一个小菜鸡。小不点儿，钱途无亮。赶紧自己动手把构思中的项目给它撸出来。这样也能提升提升个人技术能力。哎。。。</summary></entry><entry><title type="html">Linux常用软件推荐</title><link href="http://sliencejoker.github.io/linux/2021/06/24/Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90.html" rel="alternate" type="text/html" title="Linux常用软件推荐" /><published>2021-06-24T11:00:00+08:00</published><updated>2021-06-24T11:00:00+08:00</updated><id>http://sliencejoker.github.io/linux/2021/06/24/Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90</id><content type="html" xml:base="http://sliencejoker.github.io/linux/2021/06/24/Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90.html">&lt;blockquote&gt;
  &lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
  &lt;p&gt;  作为一个将有限的生命浪费在无限的折腾事业中的折腾党，大学期间曾在自己的电脑上先后装过Windows系统(从预装的家庭版操作系统一路狂刷版本号，专业版、专业工作站版、服务器版、预览版)、Linux Debian系列的Ubuntu、Arch系列的Manjaro(疯狂切桌面环境，xfce、deepin、gnome以及后来Linux国产化圈里沸沸扬扬的UOS桌面环境都尝试过，也曾丧心病狂强转arch)、Linux RPM 系列的CentOS、基于Linux内核的安卓系统技德OS(RemixOS)、以及比较能提升逼格的Hackintosh(说人话就是黑苹果)，由于个人工作原因，有幸接触Linux银河麒麟操作系统。如今发现不论是什么操作系统，重要的是能拿来干活。折腾这么久，多多少少也有点自己的心得，故此汇总一下精简版的linux软件推荐。&lt;/p&gt;
  &lt;h3 id=&quot;正文&quot;&gt;正文&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Ⅰ 普通用户推荐
      &lt;ul&gt;
        &lt;li&gt;此处普通用户是指没有折腾兴趣，只想开箱即用，不想浪费过多的精力研究Linux换源什么的，请移步国产化Linux操作系统统信UOS(前身为deepin)，或直接入正华为MateBook Linux预装版系列，需要什么软件只管去应用商店点点点就行了。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Ⅱ 折腾用户推荐
      &lt;ul&gt;
        &lt;li&gt;此处折腾用户主要是指业余时间丰富、精力旺盛的大学生(单身狗)，对Linux拥有足够的兴趣，愿意花费时间和精力进行研究，并立志于将Linux作为主力系统的群体。&lt;/li&gt;
        &lt;li&gt;推荐系统：基于Arch系列的Manjaro&lt;/li&gt;
        &lt;li&gt;推荐理由：安装方便快捷，aur社区资源丰富&lt;/li&gt;
        &lt;li&gt;桌面环境：KDE&lt;/li&gt;
        &lt;li&gt;必会技能：换源、添加aur源，开启yay支持，熟练使用pacman包管理命令。&lt;/li&gt;
        &lt;li&gt;必备软件：
          &lt;blockquote&gt;
            &lt;p&gt;办公软件：WPS &lt;br /&gt;shell ：ohmyzsh &lt;br /&gt; 通讯社交：请yay -Ss spark，自行根据常见软件包名安装，星火出品还不错，基于deepin wine5打包，Bug较少，体验友好，具体啥软件我就不用多说了，反正腾讯出品的LinuxQQ真的就呵呵了。&lt;br /&gt; 影视音娱：网易云音乐Linux版(强推)、QQ音乐这个见仁见智、腾讯视频出的是一点诚意都没有，听技术大佬说就是网页重新打包了一下。&lt;br /&gt;游戏平台：Steam，如果你对你电脑性能足够自信，玩cs go还是可以的。Steam平台上的Linux游戏也有很多，我就不误人子弟了。&lt;br /&gt;虚拟机：VMware(老牌，激活方便，可配合github大神出品的unlocker补丁开启虚拟机安装Mac OS操作系统的支持)、vbox(开源)，如果特别追求软件的体验，推荐虚拟机装windows，在windows里跑你所需要的应用程序。如果真这样干了不得不给你竖个大拇指，真是令人窒息的套娃操作。&lt;br /&gt;开发编程：宇宙第一IDE vscode，一个账号，多端同步，你甚至可以用它来登QQ，什么编程语言都可以驾驭自如，只要你会玩，你能玩出花来。Eclipse开源免破解，IDEA自己想办法，或者可以将就着用社区版。&lt;br /&gt;思维导图：xmind、百度脑图(有网页版，是我个人认为百度家最良心的产品)&lt;br /&gt;解压缩：7z、unzip、360压缩 &lt;br /&gt;浏览器：微软的新版Edge、chrome、chromium、火狐firefox(前面三个浏览器都是基于chromium内核开发，个人更喜欢用微软，毕竟老windows用户了，账号同步啥的还是很方便的，请自行百度火狐浏览器彩蛋火狐之书，很养眼的，反正火狐谷歌打架打了这么多年，一个宇宙第一浏览器，一个地球第一浏览器) &lt;br /&gt; 视频网站推荐:小破站、AcFun，我用前者看鬼畜，看张三，看冰冰，刷技术视频，看洛天依，刷BML历届演唱会，我用后者看大长腿。A站的舞蹈区还是挺耐看的。&lt;/p&gt;
          &lt;/blockquote&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Ⅲ 码农推荐
      &lt;ul&gt;
        &lt;li&gt;码农嘛，代码的搬运工(逃)，作为码农(社畜)可能是基于各种各样的工作原因不得不日常和Linux打交道，而Linux还不一定是带GUI的，我就不多哔哔赖赖了，就安利一下ohmyzsh，懂得都懂。如果因为特殊原因，Linux不允许联网，那就默认的bash凑合着用吧，善用alias别名，可以极大提升干活效率。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;h3 id=&quot;感谢&quot;&gt;感谢&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;arch wiki社区&lt;/li&gt;
    &lt;li&gt;自己曾经荒废的大好时光&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="linux" /><summary type="html">撰写缘由   作为一个将有限的生命浪费在无限的折腾事业中的折腾党，大学期间曾在自己的电脑上先后装过Windows系统(从预装的家庭版操作系统一路狂刷版本号，专业版、专业工作站版、服务器版、预览版)、Linux Debian系列的Ubuntu、Arch系列的Manjaro(疯狂切桌面环境，xfce、deepin、gnome以及后来Linux国产化圈里沸沸扬扬的UOS桌面环境都尝试过，也曾丧心病狂强转arch)、Linux RPM 系列的CentOS、基于Linux内核的安卓系统技德OS(RemixOS)、以及比较能提升逼格的Hackintosh(说人话就是黑苹果)，由于个人工作原因，有幸接触Linux银河麒麟操作系统。如今发现不论是什么操作系统，重要的是能拿来干活。折腾这么久，多多少少也有点自己的心得，故此汇总一下精简版的linux软件推荐。 正文 Ⅰ 普通用户推荐 此处普通用户是指没有折腾兴趣，只想开箱即用，不想浪费过多的精力研究Linux换源什么的，请移步国产化Linux操作系统统信UOS(前身为deepin)，或直接入正华为MateBook Linux预装版系列，需要什么软件只管去应用商店点点点就行了。 Ⅱ 折腾用户推荐 此处折腾用户主要是指业余时间丰富、精力旺盛的大学生(单身狗)，对Linux拥有足够的兴趣，愿意花费时间和精力进行研究，并立志于将Linux作为主力系统的群体。 推荐系统：基于Arch系列的Manjaro 推荐理由：安装方便快捷，aur社区资源丰富 桌面环境：KDE 必会技能：换源、添加aur源，开启yay支持，熟练使用pacman包管理命令。 必备软件： 办公软件：WPS shell ：ohmyzsh 通讯社交：请yay -Ss spark，自行根据常见软件包名安装，星火出品还不错，基于deepin wine5打包，Bug较少，体验友好，具体啥软件我就不用多说了，反正腾讯出品的LinuxQQ真的就呵呵了。 影视音娱：网易云音乐Linux版(强推)、QQ音乐这个见仁见智、腾讯视频出的是一点诚意都没有，听技术大佬说就是网页重新打包了一下。游戏平台：Steam，如果你对你电脑性能足够自信，玩cs go还是可以的。Steam平台上的Linux游戏也有很多，我就不误人子弟了。虚拟机：VMware(老牌，激活方便，可配合github大神出品的unlocker补丁开启虚拟机安装Mac OS操作系统的支持)、vbox(开源)，如果特别追求软件的体验，推荐虚拟机装windows，在windows里跑你所需要的应用程序。如果真这样干了不得不给你竖个大拇指，真是令人窒息的套娃操作。开发编程：宇宙第一IDE vscode，一个账号，多端同步，你甚至可以用它来登QQ，什么编程语言都可以驾驭自如，只要你会玩，你能玩出花来。Eclipse开源免破解，IDEA自己想办法，或者可以将就着用社区版。思维导图：xmind、百度脑图(有网页版，是我个人认为百度家最良心的产品)解压缩：7z、unzip、360压缩 浏览器：微软的新版Edge、chrome、chromium、火狐firefox(前面三个浏览器都是基于chromium内核开发，个人更喜欢用微软，毕竟老windows用户了，账号同步啥的还是很方便的，请自行百度火狐浏览器彩蛋火狐之书，很养眼的，反正火狐谷歌打架打了这么多年，一个宇宙第一浏览器，一个地球第一浏览器) 视频网站推荐:小破站、AcFun，我用前者看鬼畜，看张三，看冰冰，刷技术视频，看洛天依，刷BML历届演唱会，我用后者看大长腿。A站的舞蹈区还是挺耐看的。 Ⅲ 码农推荐 码农嘛，代码的搬运工(逃)，作为码农(社畜)可能是基于各种各样的工作原因不得不日常和Linux打交道，而Linux还不一定是带GUI的，我就不多哔哔赖赖了，就安利一下ohmyzsh，懂得都懂。如果因为特殊原因，Linux不允许联网，那就默认的bash凑合着用吧，善用alias别名，可以极大提升干活效率。 感谢 arch wiki社区 自己曾经荒废的大好时光</summary></entry><entry><title type="html">Tomcat基于APR的调优</title><link href="http://sliencejoker.github.io/linux/2021/06/22/Tomcat%E5%9F%BA%E4%BA%8EAPR%E7%9A%84%E8%B0%83%E4%BC%98.html" rel="alternate" type="text/html" title="Tomcat基于APR的调优" /><published>2021-06-22T14:58:00+08:00</published><updated>2021-06-22T14:58:00+08:00</updated><id>http://sliencejoker.github.io/linux/2021/06/22/Tomcat%E5%9F%BA%E4%BA%8EAPR%E7%9A%84%E8%B0%83%E4%BC%98</id><content type="html" xml:base="http://sliencejoker.github.io/linux/2021/06/22/Tomcat%E5%9F%BA%E4%BA%8EAPR%E7%9A%84%E8%B0%83%E4%BC%98.html">&lt;blockquote&gt;
  &lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
  &lt;p&gt;  笔者Java开发菜鸟一枚，由于项目基本使用Tomcat容器，部署过程中查看tomcat日志经常会发现warning提示开启APR，之前在mac操作系统上成功开启过，如今换用CentOS，需要重新部署一下，故此记录一下开启过程，避免以后需要的时候频繁去网上找轮子。&lt;/p&gt;
  &lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Ⅰ. 相关源码包(如无特殊说明此处源码包格式一律以tar.gz格式结尾)
      &lt;ul&gt;
        &lt;li&gt;1.1 jdk源码包，笔者使用的是jdk1.8最新版本，由于Oracle JDK旧版本需要自行注册Oracle账号并去官网下载，故此处不放下载链接。&lt;/li&gt;
        &lt;li&gt;1.2 tomcat core 任意版本，此处以 &lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.68/bin/apache-tomcat-8.5.68.tar.gz&quot;&gt;tomcat8&lt;/a&gt; 为例&lt;/li&gt;
        &lt;li&gt;1.3 tomcat APR系列，请移步此 &lt;a href=&quot;https://mirrors.ustc.edu.cn/apache/apr/&quot;&gt;网站&lt;/a&gt; ，下载apr、apr-iconv、apr-util源码包。请移步此 &lt;a href=&quot;https://mirrors.ustc.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.30/source/&quot;&gt;网站&lt;/a&gt; 下载tomcat-native源码包。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Ⅱ. 常用编译命令
      &lt;ul&gt;
        &lt;li&gt;2.1 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar zxvf XXX.tar.gz&lt;/code&gt; (解压缩源码包命令)&lt;/li&gt;
        &lt;li&gt;2.2 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure XXX&lt;/code&gt; (编译安装命令)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;hr /&gt;
  &lt;h3 id=&quot;开始操作&quot;&gt;开始操作&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Ⅰ. 环境准备
      &lt;ul&gt;
        &lt;li&gt;由于本次调优操作基于源码编译安装APR动态库，理论上Linux操作系统通用，前提是操作系统有必备的编译环境如gcc、make、openssl等编译依赖。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Ⅱ. 实操
      &lt;ul&gt;
        &lt;li&gt;2.1 为了便于安装动态库，本次操作以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/&lt;/code&gt;目录下为例，假设在该目录下已经准备好了如上所说的源码包。使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar zxf XXX.tar.gz&lt;/code&gt;命令解压，并设置好相应的jdk环境变量。&lt;/li&gt;
        &lt;li&gt;
          &lt;p&gt;2.2 以下操作采取纯命令记录。&lt;br /&gt;&lt;/p&gt;

          &lt;p&gt;yum install -y openssl openssl-devel gcc make #安装相关依赖,非CentOS请自行用其他包管理命令替代&lt;br /&gt;
tar zxf jdk-8u291-linux-x64.tar.gz #解压jdk源码包,设置jdk环境变量请自行移步各大搜索引擎  &lt;br /&gt;
tar zxf apache-tomcat-8.5.68.tar.gz #解压tomcat core 源码包&lt;br /&gt;
tar zxf apr-1.7.0.tar.gz #解压apr源码包&lt;br /&gt;
tar zxf apr-iconv-1.2.2.tar.gz #解压apr-iconv源码包&lt;br /&gt;
tar zxf apr-util-1.6.1.tar.gz #解压apr-util源码包&lt;br /&gt;
tar zxf tomcat-native-1.2.30-src.tar.gz #解压tomcat-native源码包&lt;br /&gt;
cd apr-1.7.0&lt;br /&gt;
./configure –prefix=/usr/local/apr&lt;br /&gt;
make&lt;br /&gt;
make install #从cd到make install实现了对apr的安装&lt;br /&gt;
cd apr-iconv-1.2.2&lt;br /&gt;
./configure –prefix=/usr/local/apr-iconv –with-apr=/usr/local/apr&lt;br /&gt;
make &amp;amp;&amp;amp; make install #实现对apr-iconv的安装&lt;br /&gt;
cd apr-util-1.6.1&lt;br /&gt;
./configure –prefix=/usr/local/apr-util –with-apr=/usr/local/apr –with-apr-iconv=/usr/local/apr-iconv/bin/apriconv&lt;br /&gt;
make &amp;amp;&amp;amp; make install #实现对apr-util的安装&lt;br /&gt;
cd tomcat-native-1.2.30&lt;br /&gt;
./configure –with-ssl –with-apr=/usr/local/apr –with-java-home=/usr/local/jdk1.8.0_291&lt;br /&gt;
make &amp;amp;&amp;amp; make install # 实现对tomcat-native的安装&lt;br /&gt;
vim ~/.zshrc #添加环境变量，由于笔者默认使用zsh，故在此添加&lt;br /&gt;
export LD_LIBRARY_PATH=/usr/local/apr/lib:$LD_LIBRARY_PATH&lt;br /&gt;
source ~/.zshrc&lt;br /&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;2.3 重启tomcat服务，查看日志发现不再提示找不到基于APR的Apache Tomcat Native库，它可以在生产环境中实现最佳性能，大功告成。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;感谢名单&quot;&gt;感谢名单&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/busigulang/articles/8529719.html&quot;&gt;centos 7 Tomcat 8.5 的安装及生产环境的搭建调优&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;各大搜索引擎&lt;/li&gt;
    &lt;li&gt;若本文内容有不足之处，请移步网络查询解决办法。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="linux" /><summary type="html">撰写缘由   笔者Java开发菜鸟一枚，由于项目基本使用Tomcat容器，部署过程中查看tomcat日志经常会发现warning提示开启APR，之前在mac操作系统上成功开启过，如今换用CentOS，需要重新部署一下，故此记录一下开启过程，避免以后需要的时候频繁去网上找轮子。 准备工作 Ⅰ. 相关源码包(如无特殊说明此处源码包格式一律以tar.gz格式结尾) 1.1 jdk源码包，笔者使用的是jdk1.8最新版本，由于Oracle JDK旧版本需要自行注册Oracle账号并去官网下载，故此处不放下载链接。 1.2 tomcat core 任意版本，此处以 tomcat8 为例 1.3 tomcat APR系列，请移步此 网站 ，下载apr、apr-iconv、apr-util源码包。请移步此 网站 下载tomcat-native源码包。 Ⅱ. 常用编译命令 2.1 tar zxvf XXX.tar.gz (解压缩源码包命令) 2.2 ./configure XXX (编译安装命令)</summary></entry><entry><title type="html">Ruby环境的完整配置·Windows篇</title><link href="http://sliencejoker.github.io/windows/2021/06/21/Ruby%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%8C%E6%95%B4%E9%85%8D%E7%BD%AE-Windows%E7%AF%87.html" rel="alternate" type="text/html" title="Ruby环境的完整配置·Windows篇" /><published>2021-06-21T14:58:00+08:00</published><updated>2021-06-21T14:58:00+08:00</updated><id>http://sliencejoker.github.io/windows/2021/06/21/Ruby%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%8C%E6%95%B4%E9%85%8D%E7%BD%AE%C2%B7Windows%E7%AF%87</id><content type="html" xml:base="http://sliencejoker.github.io/windows/2021/06/21/Ruby%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%8C%E6%95%B4%E9%85%8D%E7%BD%AE-Windows%E7%AF%87.html">&lt;blockquote&gt;
  &lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
  &lt;p&gt;笔者需要在Windows环境上顺利部署本人的GithubPage，以便对现阶段个人所拥有的技术能力做汇总提升。&lt;/p&gt;
  &lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;1 必备安装包(单击链接即可下载)
      &lt;ul&gt;
        &lt;li&gt;① &lt;a href=&quot;https://github-releases.githubusercontent.com/78153411/875c4880-a15b-11eb-9f3a-7e769896fdc6?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20210621%2Fus-east-1%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20210621T061856Z&amp;amp;X-Amz-Expires=300&amp;amp;X-Amz-Signature=2a74a34007b45decd94d53dd0e5b3369b63eca951deb9df38110cc50db2e30d6&amp;amp;X-Amz-SignedHeaders=host&amp;amp;actor_id=62662264&amp;amp;key_id=0&amp;amp;repo_id=78153411&amp;amp;response-content-disposition=attachment%3B%20filename%3Drubyinstaller-3.0.1-1-x64.exe&amp;amp;response-content-type=application%2Foctet-stream&quot;&gt;RubyInstaller&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;② &lt;a href=&quot;https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20210604.exe&quot;&gt;MSYS2 Installer&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;2 必备网站
      &lt;ul&gt;
        &lt;li&gt;① &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS 官网&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;② &lt;a href=&quot;http://mirrors.ustc.edu.cn/help/msys2.html&quot;&gt;MSYS2 国内源使用帮助&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;2 环境变量配置
      &lt;ul&gt;
        &lt;li&gt;安装ruby之后请将ruby安装文件夹下的bin文件夹添加至Windows系统环境变量的Path中。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;3 后续完善步骤
      &lt;ul&gt;
        &lt;li&gt;① 更改MSYS2为国内源，详情参考MYS2 国内源使用帮助。&lt;/li&gt;
        &lt;li&gt;② 根据MSYS2 官网执行后续命令&lt;/li&gt;
        &lt;li&gt;③ 将自己的githubpage项目克隆到本地，用自己喜欢的IDE打开，在终端中依次执行:
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler 
bundle install
bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
          &lt;p&gt;执行完毕即可&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;h3 id=&quot;感谢名单&quot;&gt;感谢名单&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/&quot;&gt;Jekyll 官网&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS2 官网&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/zh_cn/&quot;&gt;Ruby 官网&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mirrors.ustc.edu.cn/&quot;&gt;USTC 开源镜像站&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="windows" /><summary type="html">撰写缘由 笔者需要在Windows环境上顺利部署本人的GithubPage，以便对现阶段个人所拥有的技术能力做汇总提升。 准备工作 1 必备安装包(单击链接即可下载) ① RubyInstaller ② MSYS2 Installer 2 必备网站 ① MSYS 官网 ② MSYS2 国内源使用帮助 2 环境变量配置 安装ruby之后请将ruby安装文件夹下的bin文件夹添加至Windows系统环境变量的Path中。 3 后续完善步骤 ① 更改MSYS2为国内源，详情参考MYS2 国内源使用帮助。 ② 根据MSYS2 官网执行后续命令 ③ 将自己的githubpage项目克隆到本地，用自己喜欢的IDE打开，在终端中依次执行: gem install jekyll bundler bundle install bundle exec jekyll serve 执行完毕即可 感谢名单 Jekyll 官网 MSYS2 官网 Ruby 官网 USTC 开源镜像站</summary></entry><entry><title type="html">黑苹果折腾指南</title><link href="http://sliencejoker.github.io/mac/2021/05/10/%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8D%97.html" rel="alternate" type="text/html" title="黑苹果折腾指南" /><published>2021-05-10T14:58:00+08:00</published><updated>2021-05-10T14:58:00+08:00</updated><id>http://sliencejoker.github.io/mac/2021/05/10/%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8D%97</id><content type="html" xml:base="http://sliencejoker.github.io/mac/2021/05/10/%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8D%97.html">&lt;blockquote&gt;
  &lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
  &lt;p&gt;这两天借鉴别人的黑苹果EFI配置文件，终于折腾出了一份属于自己的EFI，学会了给DSDT打补丁以便正确显示电池电量，故此记录一下。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;具体实现&quot;&gt;具体实现&lt;/h3&gt;
  &lt;p&gt;参考OpenCore黑果小兵的OC-little热补丁，以及github上与我机器型号相近的EFI配置，通过分析其DSDT文件发现，所谓电池电量信息显示不外就是在自己机器的DSDT.aml文件下EC作用域里添加B1B2 B1B4 RE1B RECB方法，对电池设备相关方法如GBIF、GBST、_BST、_BSF、_BIF等方法里的变量对高于8位以上的字节进行字节拆分和读取。&lt;/p&gt;
  &lt;h3 id=&quot;thanks&quot;&gt;Thanks&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.daliansky.net&quot;&gt;黑果小兵的部落阁&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://xstar-dev.github.io/hackintosh_advanced/Guide_For_Battery_Hotpatch.html&quot;&gt;XStar-Dev’s Blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;以及其他开发黑苹果驱动的各类大神。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="mac" /><summary type="html">撰写缘由 这两天借鉴别人的黑苹果EFI配置文件，终于折腾出了一份属于自己的EFI，学会了给DSDT打补丁以便正确显示电池电量，故此记录一下。 具体实现 参考OpenCore黑果小兵的OC-little热补丁，以及github上与我机器型号相近的EFI配置，通过分析其DSDT文件发现，所谓电池电量信息显示不外就是在自己机器的DSDT.aml文件下EC作用域里添加B1B2 B1B4 RE1B RECB方法，对电池设备相关方法如GBIF、GBST、_BST、_BSF、_BIF等方法里的变量对高于8位以上的字节进行字节拆分和读取。 Thanks 黑果小兵的部落阁 XStar-Dev’s Blog 以及其他开发黑苹果驱动的各类大神。</summary></entry><entry><title type="html">Spring学习之AOP</title><link href="http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP.html" rel="alternate" type="text/html" title="Spring学习之AOP" /><published>2021-03-25T18:48:00+08:00</published><updated>2021-03-25T18:48:00+08:00</updated><id>http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP</id><content type="html" xml:base="http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;这两天在学Spring，关于AOP的学习上遇到了争论，差点打起来(笑)。故此记录一下。话不多说，进入正文。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Q1:什么是SpringAOP？
      &lt;ul&gt;
        &lt;li&gt;A:说的简单点就是面向切面编程。对照Spring的官方文档，官方是这么解释的：&lt;br /&gt;
官方说AOP(面向切面编程)是对OOP(面向对象编程)的补充，有别于我们过去在OOP中对类的模块化，AOP是对切面的模块化。AOP是Spring的关键组件之一，IOC容器不依赖于AOP，你爱用不用，但是AOP是对SpringIOC的强大补充，提供了一个非常强大的中间件解决方案。(潜台词是我这么优秀，多用用)。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q2：AOP的五大通知类型有哪些？
      &lt;ul&gt;
        &lt;li&gt;A：先贴上官方的一段文字，如下所示：
          &lt;ul&gt;
            &lt;li&gt;Before advice: Advice that runs before a join point but that does not have the ability to prevent execution flow proceeding to the join point (unless it throws an exception).&lt;/li&gt;
            &lt;li&gt;After returning advice: Advice to be run after a join point completes normally (for example, if a method returns without throwing an exception).&lt;/li&gt;
            &lt;li&gt;After throwing advice: Advice to be run if a method exits by throwing an exception.&lt;/li&gt;
            &lt;li&gt;After &lt;span style=&quot;color:red;&quot;&gt;(&lt;strong&gt;finally&lt;/strong&gt;)&lt;/span&gt; advice: Advice to be run regardless of the means by which a join point exits (normal or exceptional return).&lt;/li&gt;
            &lt;li&gt;Around advice: Advice that surrounds a join point such as a method invocation. This is the most powerful kind of advice. Around advice can perform custom behavior before and after the method invocation. It is also responsible for choosing whether to proceed to the join point or to shortcut the advised method execution by returning its own return value or throwing an exception.&lt;br /&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;A2: 简单说就是Before、After returning、After throwing、After、Around。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q3: 为什么能差点干起来？
      &lt;ul&gt;
        &lt;li&gt;A:我们看上文，AOP的五大通知类型，其中After就占3样，Before和Around都没啥争议，焦点就在这个After里。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q4：3种After的区别是什么？
      &lt;ul&gt;
        &lt;li&gt;A: 在讲解过程中老师是这么说的，他将After returning 解释为返回后通知，返回数据后执行；将After throwing 解释为后置通知，抛出异常后通知；将After解释为后置通知，方法执行后执行。争论焦点就在于这三种After的执行先后顺序。经过进一步的验证得知，After throwing方法只有在有异常的时候会执行，故不再提。当用注解方式执行AOP操作的话，After returning执行要早于After。类似代码如下：&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nd&quot;&gt;@After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;execution(* com.yiyun..*Service.*(..))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doAfter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;JoinPoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joinPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;执行doAfter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterReturning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;execution(* com.yiyun..*Service.*(..))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doAfterReturning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;JoinPoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joinPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfterReturning&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;程序运行结果如下：
      &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;doAfterReturning&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;执行doAfter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;而当我们使用AOP的XML配置式执行时，After和After returning取决于你在配置文件中的先后顺序。换言之，当你使用XML配置式使用AOP框架时，你想让After先执行就把它配在前面，你想让它后执行就配在后面。
如下所示配置：&lt;/p&gt;
      &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--返回后通知 方法执行完毕后执行--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aop:after-returning&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfterReturning&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;returning=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ret&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pointcut-ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pointcut&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--后置通知 方法执行后执行--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aop:after&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfter&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pointcut-ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pointcut&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;这种配置说明当切面同时存在after和after-returning方法是，最后执行After方法，如果将after方法配置在after-returning方法之前，则先执行after后执行after-returning。&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;其实仔细看官方文档的话我们会发现官方在AOP的五种通知中给After特别加上了(finally)。原来官方早已看穿了这一切。&lt;br /&gt;
培训老师指出，在工作中，看具体应用场景，在AOP中应用最多的是Around方法，在around方法中，我们可以较为方便的插入切面方法运行前、后、异常时的代码块，使用比较灵活。
&lt;span style=&quot;display:block;text-align:right;color:black;&quot;&gt; &lt;strong&gt;终&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="java" /><summary type="html">撰写缘由 这两天在学Spring，关于AOP的学习上遇到了争论，差点打起来(笑)。故此记录一下。话不多说，进入正文。</summary></entry><entry><title type="html">简单介绍常见分区格式</title><link href="http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F.html" rel="alternate" type="text/html" title="简单介绍常见分区格式" /><published>2021-03-25T11:09:00+08:00</published><updated>2021-03-25T11:09:00+08:00</updated><id>http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F</id><content type="html" xml:base="http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020年7月份至今，在培训班学习技术期间，先后
在当地买了32G的金士顿U盘，在二手鱼市场上买
了2T的扩容盘，后经翻找各种技术贴将二手鱼淘来的
U盘恢复到正常容量。由于目前用MacOS作为主力开发，
有一个U盘连接电脑时提示无法识别，需格式化，面对繁杂的
格式化选项，对分区格式化有了那么一点点小兴趣，
故此简单介绍一下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;常见分区格式&quot;&gt;常见分区格式&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;移动端(此处主要指手机、U盘)
      &lt;ul&gt;
        &lt;li&gt;EXT4 手机常用格式，同时也是Linux操作系统的主格式&lt;/li&gt;
        &lt;li&gt;f2fs 作为后起之秀，一度成为不少手机的卖点。&lt;/li&gt;
        &lt;li&gt;ExFAT 相较于FAT32，打破传输不能超过4G的限制。&lt;/li&gt;
        &lt;li&gt;MS-DOS(FAT)，能支持最大为2GB的硬盘分区。&lt;/li&gt;
        &lt;li&gt;FAT32 不支持超过4G以上文件大小的传输。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;PC端(个人电脑)
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/ntfs&quot;&gt;NTFS&lt;/a&gt; 最常见&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/ReFS&quot;&gt;ReFS&lt;/a&gt; Windows服务器用&lt;/li&gt;
        &lt;li&gt;APFS&lt;/li&gt;
        &lt;li&gt;Mac OS扩展 安装黑苹果时用，会在安装过程中将分区转为APFS&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;特别说明：加密更安全，可能会降低性能表现，默认不区分大小写，在不区分大小写的情况下Mac可以
装Adobe全家桶系列，可以装Steam等不区分大小写的软件，区分大小写后主力开发写代码和办公是没问题的。
      &lt;ul&gt;
        &lt;li&gt;Linux 更多详情请移步 &lt;a href=&quot;https://wiki.archlinux.org/index.php/File_systems&quot;&gt;ArchWiki&lt;/a&gt; 查看&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;终&quot;&gt;终&lt;/h1&gt;</content><author><name></name></author><category term="tips" /><summary type="html">撰写缘由 2020年7月份至今，在培训班学习技术期间，先后 在当地买了32G的金士顿U盘，在二手鱼市场上买 了2T的扩容盘，后经翻找各种技术贴将二手鱼淘来的 U盘恢复到正常容量。由于目前用MacOS作为主力开发， 有一个U盘连接电脑时提示无法识别，需格式化，面对繁杂的 格式化选项，对分区格式化有了那么一点点小兴趣， 故此简单介绍一下。</summary></entry><entry><title type="html">米6钉子户的自我修养</title><link href="http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html" rel="alternate" type="text/html" title="米6钉子户的自我修养" /><published>2021-03-24T00:00:00+08:00</published><updated>2021-03-24T00:00:00+08:00</updated><id>http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB</id><content type="html" xml:base="http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;835永远的神，起因很简单，一个死党给我发来消息，说米6安兔兔跑分30万，要知道这可是过气旗舰了，2017年的手机，搁现在2021年也有快四年了，一众网友调侃的新三年，旧三年，缝缝补补又年的旧三年已经过去，而小米6仍然被众多爱好者拥簇。而笔者趁机也对自己的小米6跑了一下分，安兔兔跑分总分252724，安兔兔AI评测跑分56258。对照安兔兔排行榜上的27W分，和死党秀给我的30W分，不好意思，我手机丢小米6的脸了。撰写缘由一句话概括就是由一次炫耀行为引起的文章更新。&lt;/p&gt;
  &lt;h4 id=&quot;手机调教&quot;&gt;手机调教&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;ROM
      &lt;blockquote&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.cooluc.com/aosp.html&quot;&gt;sbwml&lt;/a&gt; 的AOSP(Android Open Source Project)，单击蓝色部分可跳转官网看其详细介绍。&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;TWRP
      &lt;blockquote&gt;
        &lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/orangefox/files/sagit/&quot;&gt;OrangeFox&lt;/a&gt; 出品的TWRP，单击蓝色部分可跳转OrangeFox团队的SF(SourceForge)平台自行下载。&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Magisk
      &lt;blockquote&gt;
        &lt;p&gt;搞机必备&lt;br /&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;我的常用模块
            &lt;ul&gt;
              &lt;li&gt;NDK 系列&lt;/li&gt;
              &lt;li&gt;宁静之雨大佬出品的筑紫A丸字体，请移步其微信公众号自行搜索查找。&lt;/li&gt;
              &lt;li&gt;面具自带的Systemless hosts模块。&lt;/li&gt;
              &lt;li&gt;Advanced Charging Controller(ACC)充电控制模块&lt;/li&gt;
              &lt;li&gt;Ainur Narsil音质提升模块&lt;/li&gt;
              &lt;li&gt;MagiskHide Props Config模块，笔者曾用此模块开启安卓11的高斯模糊，并在酷安(基安)有发帖。&lt;/li&gt;
              &lt;li&gt;Oxygen OS gesture bar for AOSP模块，可开启全面屏手势。这个聊胜于无吧，看个人偏好。&lt;/li&gt;
              &lt;li&gt;OnePlus Launcher 4.6.5 模块，在非一加手机上使用一加桌面。&lt;/li&gt;
              &lt;li&gt;Wifi Bonding(Qcom)，高通芯片wifi加速模块。
                &lt;h4 id=&quot;note&quot;&gt;Note&lt;/h4&gt;
                &lt;p&gt;部分模块存在刷入失败的问题，请借助MT文件管理器编辑模块压缩包内容里的install.sh或customize.sh等模块安装的执行sh文件，搜索API并将MAXAPI的值改为30，然后重新刷入。&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;日用APP
      &lt;blockquote&gt;
        &lt;ul&gt;
          &lt;li&gt;国民必备
            &lt;ul&gt;
              &lt;li&gt;QQ&lt;/li&gt;
              &lt;li&gt;QQ邮箱&lt;/li&gt;
              &lt;li&gt;QQ音乐(每日30首的推荐越来越智障，还好到现在听歌常听的也就那些，另补充一点：酷我音乐、酷狗音乐、QQ音乐都属于腾讯音娱集团。)&lt;/li&gt;
              &lt;li&gt;网易云音乐(爆火是南京地铁网易云云评，再次进入我的视线是音乐网抑云莫名兴起，然后有理科生硬核大佬开怼。)&lt;/li&gt;
              &lt;li&gt;微信(我讨厌微信办公，在读的各位我不是针对谁，我只是说我是辣鸡，另补充一点，微信钱包的手续费太黑了。)&lt;/li&gt;
              &lt;li&gt;企业微信(毕业后挂着i纺大，可以在里面找到同一级毕业的失散多年的兄弟姐妹)&lt;/li&gt;
              &lt;li&gt;钉钉(不解释)&lt;/li&gt;
              &lt;li&gt;支付宝(相较于微信支付，我更偏爱支付宝支付，不过花呗请考虑自己的经济能力酌情使用，不建议开通借呗功能。我曾经有一份5K的借呗额度没珍惜，后来莫名给我关停了。白天996晚上669的言论也是足够雷人。)&lt;/li&gt;
              &lt;li&gt;淘宝(4年大学下来淘宝花了2万多，大头应该是在耳机、饰品、服装这一块，某次淘宝热搜出现藏头诗”好姐妹说好一生一起走，答应我谁先脱单谁是狗”，这就很魔性。)&lt;/li&gt;
              &lt;li&gt;抖音(躺尸，偶尔看看朋友们发的动态，主要是爸妈玩。。。)&lt;/li&gt;
              &lt;li&gt;快手(安装是因为周杰伦开快手直播，瞅了瞅，毕竟是青春)&lt;/li&gt;
              &lt;li&gt;哔哩哔哩(在电脑上用网页看它不香吗)&lt;/li&gt;
              &lt;li&gt;拼多多(是兄弟，就来砍我。曾因为拼多多没给人砍价挨了一顿批。我们只能慢慢变成我们所厌恶的存在。)&lt;/li&gt;
              &lt;li&gt;京东(听说买衣服上淘宝买数码上京东，京东打钱，好歹给宣传了一波)&lt;/li&gt;
              &lt;li&gt;咪咕音乐(中国移动旗下的音乐App，好处是免费歌曲资源众多，缺点是基本都是普通音质，不过有的听就不错了，还要什么自行车)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;安卓绿色应用公约
            &lt;ul&gt;
              &lt;li&gt;请移步&lt;a href=&quot;https://green-android.org/&quot;&gt;Android绿色应用公约&lt;/a&gt; ，自行下载自己所需要的App，对学生党推荐wakeup课程表App。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;搞机必备
            &lt;ul&gt;
              &lt;li&gt;MyAndroidTools(MAT)，请移步其 &lt;a href=&quot;https://www.myandroidtools.com/&quot;&gt;官网&lt;/a&gt; 并结合 &lt;a href=&quot;https://bbs.letitfly.me&quot;&gt;LetItFly BBS&lt;/a&gt; 论坛食用。&lt;/li&gt;
              &lt;li&gt;Termux，安卓上神一样的终端，国光大佬写了很多关于这个app的使用教程，只要你愿意，你甚至可以在里面装Linux、实现远程连接手机、编译ROM等功能。我是菜鸟，以上说的功能我一个都没实现。用的最顺手的也就是pkg upgrade命令。如有需求请移步&lt;a href=&quot;https://www.sqlsec.com/2018/05/termux.html&quot;&gt;国光&lt;/a&gt; 大佬的博客自行查看。&lt;/li&gt;
              &lt;li&gt;andr7e出品的Device Info HW以及flar2出品的DevCheck，都是查看手机信息的软件，两者各有侧重。&lt;/li&gt;
              &lt;li&gt;Treble Check，查看手机是否支持TP，折腾党刷GSI、sGSI必备。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Other
            &lt;ul&gt;
              &lt;li&gt;即刻，资讯类软件，玩即刻也没脱单，单身狗魔咒不知何时能打破。&lt;/li&gt;
              &lt;li&gt;最右，专治不开心。&lt;/li&gt;
              &lt;li&gt;毒汤日历，每天三口毒鸡汤，精神抖擞一整天。&lt;/li&gt;
              &lt;li&gt;牛客，程序员必备，可以刷题面经，用过一段时间，最终我还是选择了慕课网和小破站。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;码字不易，各位看官能看完都是真爱。且说且行且珍惜。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;right&quot;&gt;&lt;strong&gt;终&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="Android" /><summary type="html">撰写缘由 835永远的神，起因很简单，一个死党给我发来消息，说米6安兔兔跑分30万，要知道这可是过气旗舰了，2017年的手机，搁现在2021年也有快四年了，一众网友调侃的新三年，旧三年，缝缝补补又年的旧三年已经过去，而小米6仍然被众多爱好者拥簇。而笔者趁机也对自己的小米6跑了一下分，安兔兔跑分总分252724，安兔兔AI评测跑分56258。对照安兔兔排行榜上的27W分，和死党秀给我的30W分，不好意思，我手机丢小米6的脸了。撰写缘由一句话概括就是由一次炫耀行为引起的文章更新。 手机调教 ROM sbwml 的AOSP(Android Open Source Project)，单击蓝色部分可跳转官网看其详细介绍。 TWRP OrangeFox 出品的TWRP，单击蓝色部分可跳转OrangeFox团队的SF(SourceForge)平台自行下载。 Magisk 搞机必备 我的常用模块 NDK 系列 宁静之雨大佬出品的筑紫A丸字体，请移步其微信公众号自行搜索查找。 面具自带的Systemless hosts模块。 Advanced Charging Controller(ACC)充电控制模块 Ainur Narsil音质提升模块 MagiskHide Props Config模块，笔者曾用此模块开启安卓11的高斯模糊，并在酷安(基安)有发帖。 Oxygen OS gesture bar for AOSP模块，可开启全面屏手势。这个聊胜于无吧，看个人偏好。 OnePlus Launcher 4.6.5 模块，在非一加手机上使用一加桌面。 Wifi Bonding(Qcom)，高通芯片wifi加速模块。 Note 部分模块存在刷入失败的问题，请借助MT文件管理器编辑模块压缩包内容里的install.sh或customize.sh等模块安装的执行sh文件，搜索API并将MAXAPI的值改为30，然后重新刷入。</summary></entry><entry><title type="html">Windows使用技巧</title><link href="http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html" rel="alternate" type="text/html" title="Windows使用技巧" /><published>2021-03-22T16:00:00+08:00</published><updated>2021-03-22T16:00:00+08:00</updated><id>http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7</id><content type="html" xml:base="http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;作为一个不断折腾的伪开发人员，曾长期沉迷于Windows版本号的不断刷新，记得电脑买回来的时候预装的Windows操作系统是1607家庭版，先后在电脑上装过win7旗舰版、Ubuntu、Manjaro、Arch(伪)、macOS，win10专业版、win10专业工作站版、win10服务器版、win10预览版、RemixOS(电脑上刷安卓)，目前将macOS操作系统作为自己的主力开发。怀念那些年使用windows的日子，在此贡献上自己使用Windows的心得。&lt;/p&gt;

  &lt;hr /&gt;
  &lt;h4 id=&quot;作为普通用户使用windows的需求&quot;&gt;作为普通用户使用Windows的需求&lt;/h4&gt;
  &lt;p&gt;作为普通用户，我们都很讨厌win下乱七八糟的广告和弹窗，同时2345全家桶、360全家桶、腾讯全家桶以及古老年代的金山全家桶大幅度拖垮了用户体验。在广告弹窗方面，我们不得不感谢重橙网络科技公司代理的国内adobe flash player，正是他们的不懈努力，让广告弹窗防不胜防。大多数普通用户的需求是什么，不外就是浏览网页、看个视频、用Office办个公、听个歌，QQ、微信、钉钉必备，同时加上腾讯视频、爱奇艺视频、百度网盘这些常用软件，以及必备的下载软件、系统垃圾清理软件。接下来，开始提升win的使用体验。Let’s Go！。&lt;/p&gt;
  &lt;h4 id=&quot;win软件推荐&quot;&gt;win软件推荐&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;解压缩类软件
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://dl.bandisoft.com/bandizip.old/BANDIZIP6-SETUP.EXE?2&quot;&gt;Bandizip 6.29版本&lt;/a&gt;该版本是Bandizip6系列最后一版，无广告投放，设计感挺切合Win10界面，同时可由用户自主决定是否更新。友情提醒：7系列版本免费版有广告，商业版无广告但收费。单击蓝色部分即可直接下载。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;视频类软件
      &lt;ul&gt;
        &lt;li&gt;腾讯视频or爱奇艺视频二选一，鉴于鹅厂和爱奇艺不断薅羊毛的趋势，以及未经用户许可挂后台疯狂上传流量，更推荐用网页观看视频。再说了，年轻人，哔哩哔哩它不香吗。&lt;/li&gt;
        &lt;li&gt;PotPlayer，我愿称之为win下最强的本地播放器。网上绿色版魔改版一丢丢，甚至可以用它来看电视频道。有条件的请去官网&lt;a&gt;http://potplayer.daum.net/&lt;/a&gt;下载，无条件的请选择国内网址&lt;a&gt;http://www.potplayercn.com/&lt;/a&gt;下载，不保证其安全和纯净。详细教程请参考 &lt;a href=&quot;https://post.smzdm.com/p/av7k34qm/&quot;&gt;如何将PotPlayer折腾成在线直播平台、看电视…？(内附美化教程)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;干掉flash
      &lt;ul&gt;
        &lt;li&gt;话说天朝苦flash久已，微软推出了干掉flash的补丁，这个补丁是KB4577586，下载地址为&lt;a href=&quot;https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586&quot;&gt;https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586&lt;/a&gt;支持的版本包括：Windows 10 v1507、v1607、v1703、v1709、v1803、v1809、v1903、v1909、v2004等。请注意：Windows 10 v1909 及后续版本请在补丁下载页点击右上角翻页 ，这些补丁在第二页才可以看到下载。
其他受支持的版本：Windows 8嵌入式标准版、Windows8.1、Server 2012~2019版、LTSB/C 2015~2019版。&lt;br /&gt;
以上内容来源于 &lt;a href=&quot;https://www.landiannews.com/archives/81276.html&quot;&gt;蓝点网&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;干掉流氓软件的安装
      &lt;ul&gt;
        &lt;li&gt;该方式是在win下屏蔽流氓系列软件的证书，以便屏蔽掉在电脑上运行的流氓软件，有效方式取决于github作者的更新和流氓软件对证书的更新，github项目地址放上：&lt;a href=&quot;https://github.com/sharoue/chinawareblock&quot;&gt;https://github.com/sharoue/chinawareblock&lt;/a&gt;，我们只需要下载下来解压进入一键屏蔽软件文件夹，查看操作说明执行即可。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;办公类软件
      &lt;ul&gt;
        &lt;li&gt;大名鼎鼎的Office，可以用OTP(&lt;a href=&quot;https://otp.landian.vip/zh-cn/&quot;&gt;Office Tools Plus&lt;/a&gt;)进行Office的部署和安装。&lt;/li&gt;
        &lt;li&gt;替代软件WPS，鉴于中美关系形势和国家对国产软件的大力支持，WPS也可以作为国内非折腾用户的首选，毕竟NCRE全国计算机等级考试已经将WPS列入考试目录。附上WPS官网：&lt;a href=&quot;https://www.wps.cn/&quot;&gt;https://www.wps.cn/&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;XMind，思维导图类，懂得都懂，用这个做项目前期的准备工作真是爽的不要不要的。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;体验提升类软件
      &lt;ul&gt;
        &lt;li&gt;截屏软件Snipaste，推荐直接在win自带的应用商店下载。&lt;/li&gt;
        &lt;li&gt;状态栏透明软件TranslucentTB，推荐直接在win自带的应用软件下载。毕竟win下好容易挑一张好看的壁纸，结果下方状态栏不透明，要多影响观感就有多影响。&lt;/li&gt;
        &lt;li&gt;视频桌面不得不提米哈游的哟哟鹿鸣，B站官方号发的视频下一大堆LSP，足够舔屏。附官网下载链接：&lt;a href=&quot;https://n0va.mihoyo.com&quot;&gt;https://n0va.mihoyo.com&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;杀毒类软件
      &lt;ul&gt;
        &lt;li&gt;win自带的defender让人又爱又恨，市面上大多数安利火绒杀毒，其实腾讯电脑管家的国际版也不逊色，毕竟大厂品牌加持，也是安静的杀毒软件，英文界面可能会造成一定的使用障碍，附链接地址：&lt;a href=&quot;https://www.pcmgr-global.com/&quot;&gt;https://www.pcmgr-global.com/&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;浏览器
      &lt;ul&gt;
        &lt;li&gt;Chrome这个就不用多说了，缺陷在于普通用户的需要科学上网以便实现同步。&lt;/li&gt;
        &lt;li&gt;Edge，微软抛弃了IE后的新作，实质是使用了Chromium的内核，相较于Chrome来讲，同步功能体验友好。附下载链接：&lt;a href=&quot;https://www.microsoft.com/zh-cn/edge&quot;&gt;https://www.microsoft.com/zh-cn/edge&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Firefox火狐浏览器，反正火狐和Chrome打了好多年，一个地球最强浏览器一个宇宙最强浏览器，火狐的彩蛋Mozilla之书还蛮让人期待。附上真正的firefox下载地址：&lt;a href=&quot;https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com&quot;&gt;https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;系统工具类软件
      &lt;ul&gt;
        &lt;li&gt;DISM++ 天下第一，清理垃圾何必要下什么电脑管家，DISM++就可以了。附 &lt;a href=&quot;https://www.chuyu.me/zh-Hans/index.html&quot;&gt;官网&lt;/a&gt; ，同时DISM++官方QQ群日常吹水，日常踢红包挂。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;听歌软件
      &lt;ul&gt;
        &lt;li&gt;国内基本就是QQ音乐、网易云音乐、酷狗音乐、酷我音乐这些软件了，有条件的自行考虑Spotify。注意安装过程中谨慎点击，避免一招不慎全家桶伺候。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;游戏软件
      &lt;ul&gt;
        &lt;li&gt;WeGame游戏平台(这就不用我多说什么了)&lt;/li&gt;
        &lt;li&gt;Steam(笔者在Steam上买了神力科莎，没钱买豪车起码可以在游戏世界体验豪车，就是后续的配套设备方向盘子座椅什么的支出比较大，当然相较于一辆车而言还是很便宜的。)&lt;/li&gt;
        &lt;li&gt;Epic(游戏界的拼多多，果然人类的本质是白嫖，白嫖使我快乐，我貌似白嫖到了特洛伊？)&lt;/li&gt;
        &lt;li&gt;育碧(巴黎圣母院意外着火损失后的最大赢家，刺客信条系列某版完美复刻了巴黎圣母院，同时巴黎圣母院的失火事件压下去了国内关于996的争论。)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;远程协助类软件
      &lt;ul&gt;
        &lt;li&gt;Teamviewer，免费版的可以远程连接半个小时(如果我没记错的话)，当然这玩意绿色版的也不少，各位大佬自行去找。反正随着这个软件的更新越来越难用了，限制条件蛮多。如果用官方最新版，貌似还要注册账号什么的。&lt;/li&gt;
        &lt;li&gt;向日葵，没用过，不做评价，但是经常能刷出来关于向日葵的文章。&lt;/li&gt;
        &lt;li&gt;瞩目，同样的远程协助，笔者知道这个软件还是机缘巧合，参与某次面试的时候面试方提醒的要求下载。&lt;/li&gt;
        &lt;li&gt;DeskTopShare，笔者在培训机构学习的时候用到，讲师用这个软件开屏幕共享。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Other
      &lt;ul&gt;
        &lt;li&gt;QQ&lt;/li&gt;
        &lt;li&gt;微信(扫码登陆就很难受)&lt;/li&gt;
        &lt;li&gt;钉钉(钉三多蛮好玩的，感兴趣可以逛逛B站官方号，这只蝙蝠承受了太多它不该承受的)&lt;/li&gt;
        &lt;li&gt;百度网盘(百度网盘国际版叫DuBox，听说下载速度芜湖起飞，国内普通用户使用难度芜湖起飞)&lt;/li&gt;
        &lt;li&gt;阿里云盘(听说百度网盘知道后感觉自己的地位受到挑战然后疯狂送福利)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;下载类软件
      &lt;ul&gt;
        &lt;li&gt;安利一下Motrix，可以在某种程度上替代迅雷。Motrix官网： &lt;a&gt;https://motrix.app&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;hr /&gt;
  &lt;h3 id=&quot;终&quot;&gt;终&lt;/h3&gt;
  &lt;p&gt;希望本文能对你有所帮助。其实现有的条件下我们作为普通用户，电脑性能或多或少都存在过剩问题，保持良好的使用习惯，你会发现，windows调教好了用起来也是爽的一批。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="windows" /><summary type="html">撰写缘由 作为一个不断折腾的伪开发人员，曾长期沉迷于Windows版本号的不断刷新，记得电脑买回来的时候预装的Windows操作系统是1607家庭版，先后在电脑上装过win7旗舰版、Ubuntu、Manjaro、Arch(伪)、macOS，win10专业版、win10专业工作站版、win10服务器版、win10预览版、RemixOS(电脑上刷安卓)，目前将macOS操作系统作为自己的主力开发。怀念那些年使用windows的日子，在此贡献上自己使用Windows的心得。 作为普通用户使用Windows的需求 作为普通用户，我们都很讨厌win下乱七八糟的广告和弹窗，同时2345全家桶、360全家桶、腾讯全家桶以及古老年代的金山全家桶大幅度拖垮了用户体验。在广告弹窗方面，我们不得不感谢重橙网络科技公司代理的国内adobe flash player，正是他们的不懈努力，让广告弹窗防不胜防。大多数普通用户的需求是什么，不外就是浏览网页、看个视频、用Office办个公、听个歌，QQ、微信、钉钉必备，同时加上腾讯视频、爱奇艺视频、百度网盘这些常用软件，以及必备的下载软件、系统垃圾清理软件。接下来，开始提升win的使用体验。Let’s Go！。 win软件推荐 解压缩类软件 Bandizip 6.29版本该版本是Bandizip6系列最后一版，无广告投放，设计感挺切合Win10界面，同时可由用户自主决定是否更新。友情提醒：7系列版本免费版有广告，商业版无广告但收费。单击蓝色部分即可直接下载。 视频类软件 腾讯视频or爱奇艺视频二选一，鉴于鹅厂和爱奇艺不断薅羊毛的趋势，以及未经用户许可挂后台疯狂上传流量，更推荐用网页观看视频。再说了，年轻人，哔哩哔哩它不香吗。 PotPlayer，我愿称之为win下最强的本地播放器。网上绿色版魔改版一丢丢，甚至可以用它来看电视频道。有条件的请去官网http://potplayer.daum.net/下载，无条件的请选择国内网址http://www.potplayercn.com/下载，不保证其安全和纯净。详细教程请参考 如何将PotPlayer折腾成在线直播平台、看电视…？(内附美化教程) 干掉flash 话说天朝苦flash久已，微软推出了干掉flash的补丁，这个补丁是KB4577586，下载地址为https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586支持的版本包括：Windows 10 v1507、v1607、v1703、v1709、v1803、v1809、v1903、v1909、v2004等。请注意：Windows 10 v1909 及后续版本请在补丁下载页点击右上角翻页 ，这些补丁在第二页才可以看到下载。 其他受支持的版本：Windows 8嵌入式标准版、Windows8.1、Server 2012~2019版、LTSB/C 2015~2019版。 以上内容来源于 蓝点网 干掉流氓软件的安装 该方式是在win下屏蔽流氓系列软件的证书，以便屏蔽掉在电脑上运行的流氓软件，有效方式取决于github作者的更新和流氓软件对证书的更新，github项目地址放上：https://github.com/sharoue/chinawareblock，我们只需要下载下来解压进入一键屏蔽软件文件夹，查看操作说明执行即可。 办公类软件 大名鼎鼎的Office，可以用OTP(Office Tools Plus)进行Office的部署和安装。 替代软件WPS，鉴于中美关系形势和国家对国产软件的大力支持，WPS也可以作为国内非折腾用户的首选，毕竟NCRE全国计算机等级考试已经将WPS列入考试目录。附上WPS官网：https://www.wps.cn/ XMind，思维导图类，懂得都懂，用这个做项目前期的准备工作真是爽的不要不要的。 体验提升类软件 截屏软件Snipaste，推荐直接在win自带的应用商店下载。 状态栏透明软件TranslucentTB，推荐直接在win自带的应用软件下载。毕竟win下好容易挑一张好看的壁纸，结果下方状态栏不透明，要多影响观感就有多影响。 视频桌面不得不提米哈游的哟哟鹿鸣，B站官方号发的视频下一大堆LSP，足够舔屏。附官网下载链接：https://n0va.mihoyo.com 杀毒类软件 win自带的defender让人又爱又恨，市面上大多数安利火绒杀毒，其实腾讯电脑管家的国际版也不逊色，毕竟大厂品牌加持，也是安静的杀毒软件，英文界面可能会造成一定的使用障碍，附链接地址：https://www.pcmgr-global.com/ 浏览器 Chrome这个就不用多说了，缺陷在于普通用户的需要科学上网以便实现同步。 Edge，微软抛弃了IE后的新作，实质是使用了Chromium的内核，相较于Chrome来讲，同步功能体验友好。附下载链接：https://www.microsoft.com/zh-cn/edge Firefox火狐浏览器，反正火狐和Chrome打了好多年，一个地球最强浏览器一个宇宙最强浏览器，火狐的彩蛋Mozilla之书还蛮让人期待。附上真正的firefox下载地址：https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com 系统工具类软件 DISM++ 天下第一，清理垃圾何必要下什么电脑管家，DISM++就可以了。附 官网 ，同时DISM++官方QQ群日常吹水，日常踢红包挂。 听歌软件 国内基本就是QQ音乐、网易云音乐、酷狗音乐、酷我音乐这些软件了，有条件的自行考虑Spotify。注意安装过程中谨慎点击，避免一招不慎全家桶伺候。 游戏软件 WeGame游戏平台(这就不用我多说什么了) Steam(笔者在Steam上买了神力科莎，没钱买豪车起码可以在游戏世界体验豪车，就是后续的配套设备方向盘子座椅什么的支出比较大，当然相较于一辆车而言还是很便宜的。) Epic(游戏界的拼多多，果然人类的本质是白嫖，白嫖使我快乐，我貌似白嫖到了特洛伊？) 育碧(巴黎圣母院意外着火损失后的最大赢家，刺客信条系列某版完美复刻了巴黎圣母院，同时巴黎圣母院的失火事件压下去了国内关于996的争论。) 远程协助类软件 Teamviewer，免费版的可以远程连接半个小时(如果我没记错的话)，当然这玩意绿色版的也不少，各位大佬自行去找。反正随着这个软件的更新越来越难用了，限制条件蛮多。如果用官方最新版，貌似还要注册账号什么的。 向日葵，没用过，不做评价，但是经常能刷出来关于向日葵的文章。 瞩目，同样的远程协助，笔者知道这个软件还是机缘巧合，参与某次面试的时候面试方提醒的要求下载。 DeskTopShare，笔者在培训机构学习的时候用到，讲师用这个软件开屏幕共享。 Other QQ 微信(扫码登陆就很难受) 钉钉(钉三多蛮好玩的，感兴趣可以逛逛B站官方号，这只蝙蝠承受了太多它不该承受的) 百度网盘(百度网盘国际版叫DuBox，听说下载速度芜湖起飞，国内普通用户使用难度芜湖起飞) 阿里云盘(听说百度网盘知道后感觉自己的地位受到挑战然后疯狂送福利) 下载类软件 安利一下Motrix，可以在某种程度上替代迅雷。Motrix官网： https://motrix.app 终 希望本文能对你有所帮助。其实现有的条件下我们作为普通用户，电脑性能或多或少都存在过剩问题，保持良好的使用习惯，你会发现，windows调教好了用起来也是爽的一批。</summary></entry><entry><title type="html">Github加速</title><link href="http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F.html" rel="alternate" type="text/html" title="Github加速" /><published>2021-03-21T12:51:51+08:00</published><updated>2021-03-21T12:51:51+08:00</updated><id>http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F</id><content type="html" xml:base="http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;今天在迁移gitee项目至github的过程中，多次push报错Error443，故整合一下github加速访问的方法。结合网络上github加速的各种奇技淫巧，采用更改hosts文件的方法。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;IP查询网站&lt;a href=&quot;https://www.ipaddress.com/&quot;&gt;IPAddress.com&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;要加速的内容
      &lt;ul&gt;
        &lt;li&gt;github.com&lt;/li&gt;
        &lt;li&gt;api.github.com&lt;/li&gt;
        &lt;li&gt;github.global.ssl.fastly.net&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;要操作的文件
hosts文件，windows操作系统上该文件在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\WINDOWS\system32\drivers\etc&lt;/code&gt;目录下，macOS操作系统在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/&lt;/code&gt;目录下，由于笔者采用的是macOS操作系统，故以macOS为例进行实操。
      &lt;h3 id=&quot;操作&quot;&gt;操作&lt;/h3&gt;
      &lt;p&gt;在IPAddress.com网站中查询以上三个要映射的网站IP，笔者查出来的结果如下：&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;140.82.114.4 github.com&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;199.232.69.194 github.global.ssl.fastly.net&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;140.82.112.6 api.github.com&lt;/code&gt;&lt;br /&gt;
复制如上三行命令，在终端执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nano /etc/hosts&lt;/code&gt; ，输入自己的密码，追加在hosts文件内容底部。&lt;br /&gt;
最后执行刷新dns命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo dscacheutil -flushcache&lt;/code&gt;，windows命令为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ipconfig /flushdns&lt;/code&gt;。&lt;br /&gt;
愉快的体验加速后的github吧，直接芜湖起飞。当笔者更改hosts文件并刷新后执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt;命令上传速度1MB/s，爽的一批。&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="tips" /><summary type="html">撰写缘由 今天在迁移gitee项目至github的过程中，多次push报错Error443，故整合一下github加速访问的方法。结合网络上github加速的各种奇技淫巧，采用更改hosts文件的方法。 准备工作 IP查询网站IPAddress.com 要加速的内容 github.com api.github.com github.global.ssl.fastly.net 要操作的文件 hosts文件，windows操作系统上该文件在 C:\WINDOWS\system32\drivers\etc目录下，macOS操作系统在/etc/目录下，由于笔者采用的是macOS操作系统，故以macOS为例进行实操。 操作 在IPAddress.com网站中查询以上三个要映射的网站IP，笔者查出来的结果如下： 140.82.114.4 github.com 199.232.69.194 github.global.ssl.fastly.net 140.82.112.6 api.github.com 复制如上三行命令，在终端执行 sudo nano /etc/hosts ，输入自己的密码，追加在hosts文件内容底部。 最后执行刷新dns命令sudo dscacheutil -flushcache，windows命令为ipconfig /flushdns。 愉快的体验加速后的github吧，直接芜湖起飞。当笔者更改hosts文件并刷新后执行git push命令上传速度1MB/s，爽的一批。</summary></entry></feed>