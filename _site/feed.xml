<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://sliencejoker.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://sliencejoker.github.io/" rel="alternate" type="text/html" /><updated>2021-03-25T21:49:19+08:00</updated><id>http://sliencejoker.github.io/feed.xml</id><title type="html">Lucifer の Blog</title><subtitle>Themed by ejjoo</subtitle><entry><title type="html">Spring学习之AOP</title><link href="http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP.html" rel="alternate" type="text/html" title="Spring学习之AOP" /><published>2021-03-25T18:48:00+08:00</published><updated>2021-03-25T18:48:00+08:00</updated><id>http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP</id><content type="html" xml:base="http://sliencejoker.github.io/java/2021/03/25/Spring%E5%AD%A6%E4%B9%A0%E4%B9%8BAOP.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;这两天在学Spring，关于AOP的学习上遇到了争论，差点打起来(笑)。故此记录一下。话不多说，进入正文。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Q1:什么是SpringAOP？
      &lt;ul&gt;
        &lt;li&gt;A:说的简单点就是面向切面编程。对照Spring的官方文档，官方是这么解释的：&lt;br /&gt;
官方说AOP(面向切面编程)是对OOP(面向对象编程)的补充，有别于我们过去在OOP中对类的模块化，AOP是对切面的模块化。AOP是Spring的关键组件之一，IOC容器不依赖于AOP，你爱用不用，但是AOP是对SpringIOC的强大补充，提供了一个非常强大的中间件解决方案。(潜台词是我这么优秀，多用用)。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q2：AOP的五大通知类型有哪些？
      &lt;ul&gt;
        &lt;li&gt;A：先贴上官方的一段文字，如下所示：
          &lt;ul&gt;
            &lt;li&gt;Before advice: Advice that runs before a join point but that does not have the ability to prevent execution flow proceeding to the join point (unless it throws an exception).&lt;/li&gt;
            &lt;li&gt;After returning advice: Advice to be run after a join point completes normally (for example, if a method returns without throwing an exception).&lt;/li&gt;
            &lt;li&gt;After throwing advice: Advice to be run if a method exits by throwing an exception.&lt;/li&gt;
            &lt;li&gt;After &lt;span style=&quot;color:red;&quot;&gt;(&lt;strong&gt;finally&lt;/strong&gt;)&lt;/span&gt; advice: Advice to be run regardless of the means by which a join point exits (normal or exceptional return).&lt;/li&gt;
            &lt;li&gt;Around advice: Advice that surrounds a join point such as a method invocation. This is the most powerful kind of advice. Around advice can perform custom behavior before and after the method invocation. It is also responsible for choosing whether to proceed to the join point or to shortcut the advised method execution by returning its own return value or throwing an exception.&lt;br /&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;A2: 简单说就是Before、After returning、After throwing、After、Around。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q3: 为什么能差点干起来？
      &lt;ul&gt;
        &lt;li&gt;A:我们看上文，AOP的五大通知类型，其中After就占3样，Before和Around都没啥争议，焦点就在这个After里。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Q4：3种After的区别是什么？
      &lt;ul&gt;
        &lt;li&gt;A: 在讲解过程中老师是这么说的，他将After returning 解释为返回后通知，返回数据后执行；将After throwing 解释为后置通知，抛出异常后通知；将After解释为后置通知，方法执行后执行。争论焦点就在于这三种After的执行先后顺序。经过进一步的验证得知，After throwing方法只有在有异常的时候会执行，故不再提。当用注解方式执行AOP操作的话，After returning执行要早于After。类似代码如下：&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nd&quot;&gt;@After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;execution(* com.yiyun..*Service.*(..))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doAfter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;JoinPoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joinPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;执行doAfter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@AfterReturning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;execution(* com.yiyun..*Service.*(..))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doAfterReturning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;JoinPoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joinPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfterReturning&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;程序运行结果如下：
      &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;doAfterReturning&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;执行doAfter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;而当我们使用AOP的XML配置式执行时，After和After returning取决于你在配置文件中的先后顺序。换言之，当你使用XML配置式使用AOP框架时，你想让After先执行就把它配在前面，你想让它后执行就配在后面。
如下所示配置：&lt;/p&gt;
      &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--返回后通知 方法执行完毕后执行--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aop:after-returning&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfterReturning&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;returning=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ret&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pointcut-ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pointcut&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--后置通知 方法执行后执行--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aop:after&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doAfter&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pointcut-ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pointcut&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;这种配置说明当切面同时存在after和after-returning方法是，最后执行After方法，如果将after方法配置在after-returning方法之前，则先执行after后执行after-returning。&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;其实仔细看官方文档的话我们会发现官方在AOP的五种通知中给After特别加上了(finally)。原来官方早已看穿了这一切。&lt;br /&gt;
培训老师指出，在工作中，看具体应用场景，在AOP中应用最多的是Around方法，在around方法中，我们可以较为方便的插入切面方法运行前、后、异常时的代码块，使用比较灵活。
&lt;span style=&quot;display:block;text-align:right;color:black;&quot;&gt; &lt;strong&gt;终&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="java" /><summary type="html">撰写缘由 这两天在学Spring，关于AOP的学习上遇到了争论，差点打起来(笑)。故此记录一下。话不多说，进入正文。</summary></entry><entry><title type="html">简单介绍常见分区格式</title><link href="http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F.html" rel="alternate" type="text/html" title="简单介绍常见分区格式" /><published>2021-03-25T11:09:00+08:00</published><updated>2021-03-25T11:09:00+08:00</updated><id>http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F</id><content type="html" xml:base="http://sliencejoker.github.io/tips/2021/03/25/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%B8%B8%E8%A7%81%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020年7月份至今，在培训班学习技术期间，先后
在当地买了32G的金士顿U盘，在二手鱼市场上买
了2T的扩容盘，后经翻找各种技术贴将二手鱼淘来的
U盘恢复到正常容量。由于目前用MacOS作为主力开发，
有一个U盘连接电脑时提示无法识别，需格式化，面对繁杂的
格式化选项，对分区格式化有了那么一点点小兴趣，
故此简单介绍一下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;常见分区格式&quot;&gt;常见分区格式&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;移动端(此处主要指手机、U盘)
      &lt;ul&gt;
        &lt;li&gt;EXT4 手机常用格式，同时也是Linux操作系统的主格式&lt;/li&gt;
        &lt;li&gt;f2fs 作为后起之秀，一度成为不少手机的卖点。&lt;/li&gt;
        &lt;li&gt;ExFAT 相较于FAT32，打破传输不能超过4G的限制。&lt;/li&gt;
        &lt;li&gt;MS-DOS(FAT)，能支持最大为2GB的硬盘分区。&lt;/li&gt;
        &lt;li&gt;FAT32 不支持超过4G以上文件大小的传输。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;PC端(个人电脑)
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/ntfs&quot;&gt;NTFS&lt;/a&gt; 最常见&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/ReFS&quot;&gt;ReFS&lt;/a&gt; Windows服务器用&lt;/li&gt;
        &lt;li&gt;APFS&lt;/li&gt;
        &lt;li&gt;Mac OS扩展 安装黑苹果时用，会在安装过程中将分区转为APFS&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;特别说明：加密更安全，可能会降低性能表现，默认不区分大小写，在不区分大小写的情况下Mac可以
装Adobe全家桶系列，可以装Steam等不区分大小写的软件，区分大小写后主力开发写代码和办公是没问题的。
      &lt;ul&gt;
        &lt;li&gt;Linux 更多详情请移步 &lt;a href=&quot;https://wiki.archlinux.org/index.php/File_systems&quot;&gt;ArchWiki&lt;/a&gt; 查看&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;终&quot;&gt;终&lt;/h1&gt;</content><author><name></name></author><category term="tips" /><summary type="html">撰写缘由 2020年7月份至今，在培训班学习技术期间，先后 在当地买了32G的金士顿U盘，在二手鱼市场上买 了2T的扩容盘，后经翻找各种技术贴将二手鱼淘来的 U盘恢复到正常容量。由于目前用MacOS作为主力开发， 有一个U盘连接电脑时提示无法识别，需格式化，面对繁杂的 格式化选项，对分区格式化有了那么一点点小兴趣， 故此简单介绍一下。</summary></entry><entry><title type="html">米6钉子户的自我修养</title><link href="http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html" rel="alternate" type="text/html" title="米6钉子户的自我修养" /><published>2021-03-24T00:00:00+08:00</published><updated>2021-03-24T00:00:00+08:00</updated><id>http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB</id><content type="html" xml:base="http://sliencejoker.github.io/android/2021/03/24/%E7%B1%B36%E9%92%89%E5%AD%90%E6%88%B7%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;835永远的神，起因很简单，一个死党给我发来消息，说米6安兔兔跑分30万，要知道这可是过气旗舰了，2017年的手机，搁现在2021年也有快四年了，一众网友调侃的新三年，旧三年，缝缝补补又年的旧三年已经过去，而小米6仍然被众多爱好者拥簇。而笔者趁机也对自己的小米6跑了一下分，安兔兔跑分总分252724，安兔兔AI评测跑分56258。对照安兔兔排行榜上的27W分，和死党秀给我的30W分，不好意思，我手机丢小米6的脸了。撰写缘由一句话概括就是由一次炫耀行为引起的文章更新。&lt;/p&gt;
  &lt;h4 id=&quot;手机调教&quot;&gt;手机调教&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;ROM
      &lt;blockquote&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.cooluc.com/aosp.html&quot;&gt;sbwml&lt;/a&gt; 的AOSP(Android Open Source Project)，单击蓝色部分可跳转官网看其详细介绍。&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;TWRP
      &lt;blockquote&gt;
        &lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/orangefox/files/sagit/&quot;&gt;OrangeFox&lt;/a&gt; 出品的TWRP，单击蓝色部分可跳转OrangeFox团队的SF(SourceForge)平台自行下载。&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Magisk
      &lt;blockquote&gt;
        &lt;p&gt;搞机必备&lt;br /&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;我的常用模块
            &lt;ul&gt;
              &lt;li&gt;NDK 系列&lt;/li&gt;
              &lt;li&gt;宁静之雨大佬出品的筑紫A丸字体，请移步其微信公众号自行搜索查找。&lt;/li&gt;
              &lt;li&gt;面具自带的Systemless hosts模块。&lt;/li&gt;
              &lt;li&gt;Advanced Charging Controller(ACC)充电控制模块&lt;/li&gt;
              &lt;li&gt;Ainur Narsil音质提升模块&lt;/li&gt;
              &lt;li&gt;MagiskHide Props Config模块，笔者曾用此模块开启安卓11的高斯模糊，并在酷安(基安)有发帖。&lt;/li&gt;
              &lt;li&gt;Oxygen OS gesture bar for AOSP模块，可开启全面屏手势。这个聊胜于无吧，看个人偏好。&lt;/li&gt;
              &lt;li&gt;OnePlus Launcher 4.6.5 模块，在非一加手机上使用一加桌面。&lt;/li&gt;
              &lt;li&gt;Wifi Bonding(Qcom)，高通芯片wifi加速模块。
                &lt;h4 id=&quot;note&quot;&gt;Note&lt;/h4&gt;
                &lt;p&gt;部分模块存在刷入失败的问题，请借助MT文件管理器编辑模块压缩包内容里的install.sh或customize.sh等模块安装的执行sh文件，搜索API并将MAXAPI的值改为30，然后重新刷入。&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;日用APP
      &lt;blockquote&gt;
        &lt;ul&gt;
          &lt;li&gt;国民必备
            &lt;ul&gt;
              &lt;li&gt;QQ&lt;/li&gt;
              &lt;li&gt;QQ邮箱&lt;/li&gt;
              &lt;li&gt;QQ音乐(每日30首的推荐越来越智障，还好到现在听歌常听的也就那些，另补充一点：酷我音乐、酷狗音乐、QQ音乐都属于腾讯音娱集团。)&lt;/li&gt;
              &lt;li&gt;网易云音乐(爆火是南京地铁网易云云评，再次进入我的视线是音乐网抑云莫名兴起，然后有理科生硬核大佬开怼。)&lt;/li&gt;
              &lt;li&gt;微信(我讨厌微信办公，在读的各位我不是针对谁，我只是说我是辣鸡，另补充一点，微信钱包的手续费太黑了。)&lt;/li&gt;
              &lt;li&gt;企业微信(毕业后挂着i纺大，可以在里面找到同一级毕业的失散多年的兄弟姐妹)&lt;/li&gt;
              &lt;li&gt;钉钉(不解释)&lt;/li&gt;
              &lt;li&gt;支付宝(相较于微信支付，我更偏爱支付宝支付，不过花呗请考虑自己的经济能力酌情使用，不建议开通借呗功能。我曾经有一份5K的借呗额度没珍惜，后来莫名给我关停了。白天996晚上669的言论也是足够雷人。)&lt;/li&gt;
              &lt;li&gt;淘宝(4年大学下来淘宝花了2万多，大头应该是在耳机、饰品、服装这一块，某次淘宝热搜出现藏头诗”好姐妹说好一生一起走，答应我谁先脱单谁是狗”，这就很魔性。)&lt;/li&gt;
              &lt;li&gt;抖音(躺尸，偶尔看看朋友们发的动态，主要是爸妈玩。。。)&lt;/li&gt;
              &lt;li&gt;快手(安装是因为周杰伦开快手直播，瞅了瞅，毕竟是青春)&lt;/li&gt;
              &lt;li&gt;哔哩哔哩(在电脑上用网页看它不香吗)&lt;/li&gt;
              &lt;li&gt;拼多多(是兄弟，就来砍我。曾因为拼多多没给人砍价挨了一顿批。我们只能慢慢变成我们所厌恶的存在。)&lt;/li&gt;
              &lt;li&gt;京东(听说买衣服上淘宝买数码上京东，京东打钱，好歹给宣传了一波)&lt;/li&gt;
              &lt;li&gt;咪咕音乐(中国移动旗下的音乐App，好处是免费歌曲资源众多，缺点是基本都是普通音质，不过有的听就不错了，还要什么自行车)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;安卓绿色应用公约
            &lt;ul&gt;
              &lt;li&gt;请移步&lt;a href=&quot;https://green-android.org/&quot;&gt;Android绿色应用公约&lt;/a&gt; ，自行下载自己所需要的App，对学生党推荐wakeup课程表App。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;搞机必备
            &lt;ul&gt;
              &lt;li&gt;MyAndroidTools(MAT)，请移步其 &lt;a href=&quot;https://www.myandroidtools.com/&quot;&gt;官网&lt;/a&gt; 并结合 &lt;a href=&quot;https://bbs.letitfly.me&quot;&gt;LetItFly BBS&lt;/a&gt; 论坛食用。&lt;/li&gt;
              &lt;li&gt;Termux，安卓上神一样的终端，国光大佬写了很多关于这个app的使用教程，只要你愿意，你甚至可以在里面装Linux、实现远程连接手机、编译ROM等功能。我是菜鸟，以上说的功能我一个都没实现。用的最顺手的也就是pkg upgrade命令。如有需求请移步&lt;a href=&quot;https://www.sqlsec.com/2018/05/termux.html&quot;&gt;国光&lt;/a&gt; 大佬的博客自行查看。&lt;/li&gt;
              &lt;li&gt;andr7e出品的Device Info HW以及flar2出品的DevCheck，都是查看手机信息的软件，两者各有侧重。&lt;/li&gt;
              &lt;li&gt;Treble Check，查看手机是否支持TP，折腾党刷GSI、sGSI必备。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Other
            &lt;ul&gt;
              &lt;li&gt;即刻，资讯类软件，玩即刻也没脱单，单身狗魔咒不知何时能打破。&lt;/li&gt;
              &lt;li&gt;最右，专治不开心。&lt;/li&gt;
              &lt;li&gt;毒汤日历，每天三口毒鸡汤，精神抖擞一整天。&lt;/li&gt;
              &lt;li&gt;牛客，程序员必备，可以刷题面经，用过一段时间，最终我还是选择了慕课网和小破站。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;码字不易，各位看官能看完都是真爱。且说且行且珍惜。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;right&quot;&gt;&lt;strong&gt;终&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="Android" /><summary type="html">撰写缘由 835永远的神，起因很简单，一个死党给我发来消息，说米6安兔兔跑分30万，要知道这可是过气旗舰了，2017年的手机，搁现在2021年也有快四年了，一众网友调侃的新三年，旧三年，缝缝补补又年的旧三年已经过去，而小米6仍然被众多爱好者拥簇。而笔者趁机也对自己的小米6跑了一下分，安兔兔跑分总分252724，安兔兔AI评测跑分56258。对照安兔兔排行榜上的27W分，和死党秀给我的30W分，不好意思，我手机丢小米6的脸了。撰写缘由一句话概括就是由一次炫耀行为引起的文章更新。 手机调教 ROM sbwml 的AOSP(Android Open Source Project)，单击蓝色部分可跳转官网看其详细介绍。 TWRP OrangeFox 出品的TWRP，单击蓝色部分可跳转OrangeFox团队的SF(SourceForge)平台自行下载。 Magisk 搞机必备 我的常用模块 NDK 系列 宁静之雨大佬出品的筑紫A丸字体，请移步其微信公众号自行搜索查找。 面具自带的Systemless hosts模块。 Advanced Charging Controller(ACC)充电控制模块 Ainur Narsil音质提升模块 MagiskHide Props Config模块，笔者曾用此模块开启安卓11的高斯模糊，并在酷安(基安)有发帖。 Oxygen OS gesture bar for AOSP模块，可开启全面屏手势。这个聊胜于无吧，看个人偏好。 OnePlus Launcher 4.6.5 模块，在非一加手机上使用一加桌面。 Wifi Bonding(Qcom)，高通芯片wifi加速模块。 Note 部分模块存在刷入失败的问题，请借助MT文件管理器编辑模块压缩包内容里的install.sh或customize.sh等模块安装的执行sh文件，搜索API并将MAXAPI的值改为30，然后重新刷入。</summary></entry><entry><title type="html">Windows使用技巧</title><link href="http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html" rel="alternate" type="text/html" title="Windows使用技巧" /><published>2021-03-22T16:00:00+08:00</published><updated>2021-03-22T16:00:00+08:00</updated><id>http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7</id><content type="html" xml:base="http://sliencejoker.github.io/windows/2021/03/22/Windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;作为一个不断折腾的伪开发人员，曾长期沉迷于Windows版本号的不断刷新，记得电脑买回来的时候预装的Windows操作系统是1607家庭版，先后在电脑上装过win7旗舰版、Ubuntu、Manjaro、Arch(伪)、macOS，win10专业版、win10专业工作站版、win10服务器版、win10预览版、RemixOS(电脑上刷安卓)，目前将macOS操作系统作为自己的主力开发。怀念那些年使用windows的日子，在此贡献上自己使用Windows的心得。&lt;/p&gt;

  &lt;hr /&gt;
  &lt;h4 id=&quot;作为普通用户使用windows的需求&quot;&gt;作为普通用户使用Windows的需求&lt;/h4&gt;
  &lt;p&gt;作为普通用户，我们都很讨厌win下乱七八糟的广告和弹窗，同时2345全家桶、360全家桶、腾讯全家桶以及古老年代的金山全家桶大幅度拖垮了用户体验。在广告弹窗方面，我们不得不感谢重橙网络科技公司代理的国内adobe flash player，正是他们的不懈努力，让广告弹窗防不胜防。大多数普通用户的需求是什么，不外就是浏览网页、看个视频、用Office办个公、听个歌，QQ、微信、钉钉必备，同时加上腾讯视频、爱奇艺视频、百度网盘这些常用软件，以及必备的下载软件、系统垃圾清理软件。接下来，开始提升win的使用体验。Let’s Go！。&lt;/p&gt;
  &lt;h4 id=&quot;win软件推荐&quot;&gt;win软件推荐&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;解压缩类软件
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://dl.bandisoft.com/bandizip.old/BANDIZIP6-SETUP.EXE?2&quot;&gt;Bandizip 6.29版本&lt;/a&gt;该版本是Bandizip6系列最后一版，无广告投放，设计感挺切合Win10界面，同时可由用户自主决定是否更新。友情提醒：7系列版本免费版有广告，商业版无广告但收费。单击蓝色部分即可直接下载。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;视频类软件
      &lt;ul&gt;
        &lt;li&gt;腾讯视频or爱奇艺视频二选一，鉴于鹅厂和爱奇艺不断薅羊毛的趋势，以及未经用户许可挂后台疯狂上传流量，更推荐用网页观看视频。再说了，年轻人，哔哩哔哩它不香吗。&lt;/li&gt;
        &lt;li&gt;PotPlayer，我愿称之为win下最强的本地播放器。网上绿色版魔改版一丢丢，甚至可以用它来看电视频道。有条件的请去官网&lt;a&gt;http://potplayer.daum.net/&lt;/a&gt;下载，无条件的请选择国内网址&lt;a&gt;http://www.potplayercn.com/&lt;/a&gt;下载，不保证其安全和纯净。详细教程请参考 &lt;a href=&quot;https://post.smzdm.com/p/av7k34qm/&quot;&gt;如何将PotPlayer折腾成在线直播平台、看电视…？(内附美化教程)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;干掉flash
      &lt;ul&gt;
        &lt;li&gt;话说天朝苦flash久已，微软推出了干掉flash的补丁，这个补丁是KB4577586，下载地址为&lt;a href=&quot;https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586&quot;&gt;https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586&lt;/a&gt;支持的版本包括：Windows 10 v1507、v1607、v1703、v1709、v1803、v1809、v1903、v1909、v2004等。请注意：Windows 10 v1909 及后续版本请在补丁下载页点击右上角翻页 ，这些补丁在第二页才可以看到下载。
其他受支持的版本：Windows 8嵌入式标准版、Windows8.1、Server 2012~2019版、LTSB/C 2015~2019版。&lt;br /&gt;
以上内容来源于 &lt;a href=&quot;https://www.landiannews.com/archives/81276.html&quot;&gt;蓝点网&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;干掉流氓软件的安装
      &lt;ul&gt;
        &lt;li&gt;该方式是在win下屏蔽流氓系列软件的证书，以便屏蔽掉在电脑上运行的流氓软件，有效方式取决于github作者的更新和流氓软件对证书的更新，github项目地址放上：&lt;a href=&quot;https://github.com/sharoue/chinawareblock&quot;&gt;https://github.com/sharoue/chinawareblock&lt;/a&gt;，我们只需要下载下来解压进入一键屏蔽软件文件夹，查看操作说明执行即可。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;办公类软件
      &lt;ul&gt;
        &lt;li&gt;大名鼎鼎的Office，可以用OTP(&lt;a href=&quot;https://otp.landian.vip/zh-cn/&quot;&gt;Office Tools Plus&lt;/a&gt;)进行Office的部署和安装。&lt;/li&gt;
        &lt;li&gt;替代软件WPS，鉴于中美关系形势和国家对国产软件的大力支持，WPS也可以作为国内非折腾用户的首选，毕竟NCRE全国计算机等级考试已经将WPS列入考试目录。附上WPS官网：&lt;a href=&quot;https://www.wps.cn/&quot;&gt;https://www.wps.cn/&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;XMind，思维导图类，懂得都懂，用这个做项目前期的准备工作真是爽的不要不要的。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;体验提升类软件
      &lt;ul&gt;
        &lt;li&gt;截屏软件Snipaste，推荐直接在win自带的应用商店下载。&lt;/li&gt;
        &lt;li&gt;状态栏透明软件TranslucentTB，推荐直接在win自带的应用软件下载。毕竟win下好容易挑一张好看的壁纸，结果下方状态栏不透明，要多影响观感就有多影响。&lt;/li&gt;
        &lt;li&gt;视频桌面不得不提米哈游的哟哟鹿鸣，B站官方号发的视频下一大堆LSP，足够舔屏。附官网下载链接：&lt;a href=&quot;https://n0va.mihoyo.com&quot;&gt;https://n0va.mihoyo.com&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;杀毒类软件
      &lt;ul&gt;
        &lt;li&gt;win自带的defender让人又爱又恨，市面上大多数安利火绒杀毒，其实腾讯电脑管家的国际版也不逊色，毕竟大厂品牌加持，也是安静的杀毒软件，英文界面可能会造成一定的使用障碍，附链接地址：&lt;a href=&quot;https://www.pcmgr-global.com/&quot;&gt;https://www.pcmgr-global.com/&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;浏览器
      &lt;ul&gt;
        &lt;li&gt;Chrome这个就不用多说了，缺陷在于普通用户的需要科学上网以便实现同步。&lt;/li&gt;
        &lt;li&gt;Edge，微软抛弃了IE后的新作，实质是使用了Chromium的内核，相较于Chrome来讲，同步功能体验友好。附下载链接：&lt;a href=&quot;https://www.microsoft.com/zh-cn/edge&quot;&gt;https://www.microsoft.com/zh-cn/edge&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Firefox火狐浏览器，反正火狐和Chrome打了好多年，一个地球最强浏览器一个宇宙最强浏览器，火狐的彩蛋Mozilla之书还蛮让人期待。附上真正的firefox下载地址：&lt;a href=&quot;https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com&quot;&gt;https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;系统工具类软件
      &lt;ul&gt;
        &lt;li&gt;DISM++ 天下第一，清理垃圾何必要下什么电脑管家，DISM++就可以了。附 &lt;a href=&quot;https://www.chuyu.me/zh-Hans/index.html&quot;&gt;官网&lt;/a&gt; ，同时DISM++官方QQ群日常吹水，日常踢红包挂。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;听歌软件
      &lt;ul&gt;
        &lt;li&gt;国内基本就是QQ音乐、网易云音乐、酷狗音乐、酷我音乐这些软件了，有条件的自行考虑Spotify。注意安装过程中谨慎点击，避免一招不慎全家桶伺候。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;游戏软件
      &lt;ul&gt;
        &lt;li&gt;WeGame游戏平台(这就不用我多说什么了)&lt;/li&gt;
        &lt;li&gt;Steam(笔者在Steam上买了神力科莎，没钱买豪车起码可以在游戏世界体验豪车，就是后续的配套设备方向盘子座椅什么的支出比较大，当然相较于一辆车而言还是很便宜的。)&lt;/li&gt;
        &lt;li&gt;Epic(游戏界的拼多多，果然人类的本质是白嫖，白嫖使我快乐，我貌似白嫖到了特洛伊？)&lt;/li&gt;
        &lt;li&gt;育碧(巴黎圣母院意外着火损失后的最大赢家，刺客信条系列某版完美复刻了巴黎圣母院，同时巴黎圣母院的失火事件压下去了国内关于996的争论。)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;远程协助类软件
      &lt;ul&gt;
        &lt;li&gt;Teamviewer，免费版的可以远程连接半个小时(如果我没记错的话)，当然这玩意绿色版的也不少，各位大佬自行去找。反正随着这个软件的更新越来越难用了，限制条件蛮多。如果用官方最新版，貌似还要注册账号什么的。&lt;/li&gt;
        &lt;li&gt;向日葵，没用过，不做评价，但是经常能刷出来关于向日葵的文章。&lt;/li&gt;
        &lt;li&gt;瞩目，同样的远程协助，笔者知道这个软件还是机缘巧合，参与某次面试的时候面试方提醒的要求下载。&lt;/li&gt;
        &lt;li&gt;DeskTopShare，笔者在培训机构学习的时候用到，讲师用这个软件开屏幕共享。&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Other
      &lt;ul&gt;
        &lt;li&gt;QQ&lt;/li&gt;
        &lt;li&gt;微信(扫码登陆就很难受)&lt;/li&gt;
        &lt;li&gt;钉钉(钉三多蛮好玩的，感兴趣可以逛逛B站官方号，这只蝙蝠承受了太多它不该承受的)&lt;/li&gt;
        &lt;li&gt;百度网盘(百度网盘国际版叫DuBox，听说下载速度芜湖起飞，国内普通用户使用难度芜湖起飞)&lt;/li&gt;
        &lt;li&gt;阿里云盘(听说百度网盘知道后感觉自己的地位受到挑战然后疯狂送福利)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;下载类软件
      &lt;ul&gt;
        &lt;li&gt;安利一下Motrix，可以在某种程度上替代迅雷。Motrix官网： &lt;a&gt;https://motrix.app&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;hr /&gt;
  &lt;h3 id=&quot;终&quot;&gt;终&lt;/h3&gt;
  &lt;p&gt;希望本文能对你有所帮助。其实现有的条件下我们作为普通用户，电脑性能或多或少都存在过剩问题，保持良好的使用习惯，你会发现，windows调教好了用起来也是爽的一批。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="Windows" /><summary type="html">撰写缘由 作为一个不断折腾的伪开发人员，曾长期沉迷于Windows版本号的不断刷新，记得电脑买回来的时候预装的Windows操作系统是1607家庭版，先后在电脑上装过win7旗舰版、Ubuntu、Manjaro、Arch(伪)、macOS，win10专业版、win10专业工作站版、win10服务器版、win10预览版、RemixOS(电脑上刷安卓)，目前将macOS操作系统作为自己的主力开发。怀念那些年使用windows的日子，在此贡献上自己使用Windows的心得。 作为普通用户使用Windows的需求 作为普通用户，我们都很讨厌win下乱七八糟的广告和弹窗，同时2345全家桶、360全家桶、腾讯全家桶以及古老年代的金山全家桶大幅度拖垮了用户体验。在广告弹窗方面，我们不得不感谢重橙网络科技公司代理的国内adobe flash player，正是他们的不懈努力，让广告弹窗防不胜防。大多数普通用户的需求是什么，不外就是浏览网页、看个视频、用Office办个公、听个歌，QQ、微信、钉钉必备，同时加上腾讯视频、爱奇艺视频、百度网盘这些常用软件，以及必备的下载软件、系统垃圾清理软件。接下来，开始提升win的使用体验。Let’s Go！。 win软件推荐 解压缩类软件 Bandizip 6.29版本该版本是Bandizip6系列最后一版，无广告投放，设计感挺切合Win10界面，同时可由用户自主决定是否更新。友情提醒：7系列版本免费版有广告，商业版无广告但收费。单击蓝色部分即可直接下载。 视频类软件 腾讯视频or爱奇艺视频二选一，鉴于鹅厂和爱奇艺不断薅羊毛的趋势，以及未经用户许可挂后台疯狂上传流量，更推荐用网页观看视频。再说了，年轻人，哔哩哔哩它不香吗。 PotPlayer，我愿称之为win下最强的本地播放器。网上绿色版魔改版一丢丢，甚至可以用它来看电视频道。有条件的请去官网http://potplayer.daum.net/下载，无条件的请选择国内网址http://www.potplayercn.com/下载，不保证其安全和纯净。详细教程请参考 如何将PotPlayer折腾成在线直播平台、看电视…？(内附美化教程) 干掉flash 话说天朝苦flash久已，微软推出了干掉flash的补丁，这个补丁是KB4577586，下载地址为https://www.catalog.update.microsoft.com/Search.aspx?q=KB4577586支持的版本包括：Windows 10 v1507、v1607、v1703、v1709、v1803、v1809、v1903、v1909、v2004等。请注意：Windows 10 v1909 及后续版本请在补丁下载页点击右上角翻页 ，这些补丁在第二页才可以看到下载。 其他受支持的版本：Windows 8嵌入式标准版、Windows8.1、Server 2012~2019版、LTSB/C 2015~2019版。 以上内容来源于 蓝点网 干掉流氓软件的安装 该方式是在win下屏蔽流氓系列软件的证书，以便屏蔽掉在电脑上运行的流氓软件，有效方式取决于github作者的更新和流氓软件对证书的更新，github项目地址放上：https://github.com/sharoue/chinawareblock，我们只需要下载下来解压进入一键屏蔽软件文件夹，查看操作说明执行即可。 办公类软件 大名鼎鼎的Office，可以用OTP(Office Tools Plus)进行Office的部署和安装。 替代软件WPS，鉴于中美关系形势和国家对国产软件的大力支持，WPS也可以作为国内非折腾用户的首选，毕竟NCRE全国计算机等级考试已经将WPS列入考试目录。附上WPS官网：https://www.wps.cn/ XMind，思维导图类，懂得都懂，用这个做项目前期的准备工作真是爽的不要不要的。 体验提升类软件 截屏软件Snipaste，推荐直接在win自带的应用商店下载。 状态栏透明软件TranslucentTB，推荐直接在win自带的应用软件下载。毕竟win下好容易挑一张好看的壁纸，结果下方状态栏不透明，要多影响观感就有多影响。 视频桌面不得不提米哈游的哟哟鹿鸣，B站官方号发的视频下一大堆LSP，足够舔屏。附官网下载链接：https://n0va.mihoyo.com 杀毒类软件 win自带的defender让人又爱又恨，市面上大多数安利火绒杀毒，其实腾讯电脑管家的国际版也不逊色，毕竟大厂品牌加持，也是安静的杀毒软件，英文界面可能会造成一定的使用障碍，附链接地址：https://www.pcmgr-global.com/ 浏览器 Chrome这个就不用多说了，缺陷在于普通用户的需要科学上网以便实现同步。 Edge，微软抛弃了IE后的新作，实质是使用了Chromium的内核，相较于Chrome来讲，同步功能体验友好。附下载链接：https://www.microsoft.com/zh-cn/edge Firefox火狐浏览器，反正火狐和Chrome打了好多年，一个地球最强浏览器一个宇宙最强浏览器，火狐的彩蛋Mozilla之书还蛮让人期待。附上真正的firefox下载地址：https://www.mozilla.org/zh-CN/firefox/new/?redirect_source=firefox-com 系统工具类软件 DISM++ 天下第一，清理垃圾何必要下什么电脑管家，DISM++就可以了。附 官网 ，同时DISM++官方QQ群日常吹水，日常踢红包挂。 听歌软件 国内基本就是QQ音乐、网易云音乐、酷狗音乐、酷我音乐这些软件了，有条件的自行考虑Spotify。注意安装过程中谨慎点击，避免一招不慎全家桶伺候。 游戏软件 WeGame游戏平台(这就不用我多说什么了) Steam(笔者在Steam上买了神力科莎，没钱买豪车起码可以在游戏世界体验豪车，就是后续的配套设备方向盘子座椅什么的支出比较大，当然相较于一辆车而言还是很便宜的。) Epic(游戏界的拼多多，果然人类的本质是白嫖，白嫖使我快乐，我貌似白嫖到了特洛伊？) 育碧(巴黎圣母院意外着火损失后的最大赢家，刺客信条系列某版完美复刻了巴黎圣母院，同时巴黎圣母院的失火事件压下去了国内关于996的争论。) 远程协助类软件 Teamviewer，免费版的可以远程连接半个小时(如果我没记错的话)，当然这玩意绿色版的也不少，各位大佬自行去找。反正随着这个软件的更新越来越难用了，限制条件蛮多。如果用官方最新版，貌似还要注册账号什么的。 向日葵，没用过，不做评价，但是经常能刷出来关于向日葵的文章。 瞩目，同样的远程协助，笔者知道这个软件还是机缘巧合，参与某次面试的时候面试方提醒的要求下载。 DeskTopShare，笔者在培训机构学习的时候用到，讲师用这个软件开屏幕共享。 Other QQ 微信(扫码登陆就很难受) 钉钉(钉三多蛮好玩的，感兴趣可以逛逛B站官方号，这只蝙蝠承受了太多它不该承受的) 百度网盘(百度网盘国际版叫DuBox，听说下载速度芜湖起飞，国内普通用户使用难度芜湖起飞) 阿里云盘(听说百度网盘知道后感觉自己的地位受到挑战然后疯狂送福利) 下载类软件 安利一下Motrix，可以在某种程度上替代迅雷。Motrix官网： https://motrix.app 终 希望本文能对你有所帮助。其实现有的条件下我们作为普通用户，电脑性能或多或少都存在过剩问题，保持良好的使用习惯，你会发现，windows调教好了用起来也是爽的一批。</summary></entry><entry><title type="html">Github加速</title><link href="http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F.html" rel="alternate" type="text/html" title="Github加速" /><published>2021-03-21T12:51:51+08:00</published><updated>2021-03-21T12:51:51+08:00</updated><id>http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F</id><content type="html" xml:base="http://sliencejoker.github.io/tips/2021/03/21/Github%E5%8A%A0%E9%80%9F.html">&lt;h3 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;今天在迁移gitee项目至github的过程中，多次push报错Error443，故整合一下github加速访问的方法。结合网络上github加速的各种奇技淫巧，采用更改hosts文件的方法。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;IP查询网站&lt;a href=&quot;https://www.ipaddress.com/&quot;&gt;IPAddress.com&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;要加速的内容
      &lt;ul&gt;
        &lt;li&gt;github.com&lt;/li&gt;
        &lt;li&gt;api.github.com&lt;/li&gt;
        &lt;li&gt;github.global.ssl.fastly.net&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;要操作的文件
hosts文件，windows操作系统上该文件在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\WINDOWS\system32\drivers\etc&lt;/code&gt;目录下，macOS操作系统在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/&lt;/code&gt;目录下，由于笔者采用的是macOS操作系统，故以macOS为例进行实操。
      &lt;h3 id=&quot;操作&quot;&gt;操作&lt;/h3&gt;
      &lt;p&gt;在IPAddress.com网站中查询以上三个要映射的网站IP，笔者查出来的结果如下：&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;140.82.114.4 github.com&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;199.232.69.194 github.global.ssl.fastly.net&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;140.82.112.6 api.github.com&lt;/code&gt;&lt;br /&gt;
复制如上三行命令，在终端执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nano /etc/hosts&lt;/code&gt; ，输入自己的密码，追加在hosts文件内容底部。&lt;br /&gt;
最后执行刷新dns命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo dscacheutil -flushcache&lt;/code&gt;，windows命令为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ipconfig /flushdns&lt;/code&gt;。&lt;br /&gt;
愉快的体验加速后的github吧，直接芜湖起飞。当笔者更改hosts文件并刷新后执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt;命令上传速度1MB/s，爽的一批。&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="tips" /><summary type="html">撰写缘由 今天在迁移gitee项目至github的过程中，多次push报错Error443，故整合一下github加速访问的方法。结合网络上github加速的各种奇技淫巧，采用更改hosts文件的方法。 准备工作 IP查询网站IPAddress.com 要加速的内容 github.com api.github.com github.global.ssl.fastly.net 要操作的文件 hosts文件，windows操作系统上该文件在 C:\WINDOWS\system32\drivers\etc目录下，macOS操作系统在/etc/目录下，由于笔者采用的是macOS操作系统，故以macOS为例进行实操。 操作 在IPAddress.com网站中查询以上三个要映射的网站IP，笔者查出来的结果如下： 140.82.114.4 github.com 199.232.69.194 github.global.ssl.fastly.net 140.82.112.6 api.github.com 复制如上三行命令，在终端执行 sudo nano /etc/hosts ，输入自己的密码，追加在hosts文件内容底部。 最后执行刷新dns命令sudo dscacheutil -flushcache，windows命令为ipconfig /flushdns。 愉快的体验加速后的github吧，直接芜湖起飞。当笔者更改hosts文件并刷新后执行git push命令上传速度1MB/s，爽的一批。</summary></entry><entry><title type="html">贾志楷的个人简历</title><link href="http://sliencejoker.github.io/resume/2021/03/20/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86.html" rel="alternate" type="text/html" title="贾志楷的个人简历" /><published>2021-03-20T22:43:50+08:00</published><updated>2021-03-20T22:43:50+08:00</updated><id>http://sliencejoker.github.io/resume/2021/03/20/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86</id><content type="html" xml:base="http://sliencejoker.github.io/resume/2021/03/20/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86.html">&lt;h4 id=&quot;个人信息&quot;&gt;个人信息&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;姓名：贾志楷 | 求职岗位：Java开发 &lt;br /&gt;
预计到岗时间：1个月之内 ｜意向城市：上海 &lt;br /&gt;
📧：2036736521@qq.com | 📱：+86 18295780761 ｜ 🏠：河北省石家庄市辛集市辛集镇车站街凌宇大楼&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;h4 id=&quot;教育经历2016-09-至-2020-07-武汉纺织大学--管理学院-市场营销-&quot;&gt;教育经历：2016-09 至 2020-07 &lt;a href=&quot;https://www.wtu.edu.cn/&quot;&gt;武汉纺织大学&lt;/a&gt;  &lt;a href=&quot;http://em.wtu.edu.cn/&quot;&gt;管理学院&lt;/a&gt; &lt;a href=&quot;http://em.wtu.edu.cn/info/1005/1018.htm&quot;&gt;市场营销&lt;/a&gt; &lt;br /&gt;&lt;/h4&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;h4 id=&quot;相关技能java--html--mysql--office办公软件--xmind--linux--axure-rp--idea--eclipse--vscode--markdown&quot;&gt;相关技能：Java &amp;amp; HTML &amp;amp; MySQL | Office办公软件 | XMind &amp;amp; Linux | Axure RP | IDEA &amp;amp; Eclipse &amp;amp; VSCode | Markdown&lt;/h4&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;h4 id=&quot;项目经历&quot;&gt;项目经历&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;2020-07 至今 
2014-03 至 2015-06 这是一段毫无意义的文字，但是为了不影响大家阅读&lt;/li&gt;
    &lt;li&gt;2021-03 至今，开通GitHubPage并日常维护，记录心得，提升自身技术底蕴。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;社会经历&quot;&gt;社会经历&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;2020-02 至 2020-04 在北京求职2个月，先后经历过联想、链家、热风、京东商超、前程无忧、尚德等公司的面试，加深了自我认知，明确自己的优缺点和个人特色。&lt;/li&gt;
    &lt;li&gt;2018-06 至 2018-09 在武汉纸路科技有限公司担任渠道经理，为该公司扩展了销售渠道，同时学习了HTML前端方面的知识，打开兴趣大门。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;校园经历&quot;&gt;校园经历&lt;/h4&gt;
  &lt;ul&gt;
    &lt;li&gt;2019-09 至 2019-11 担任广州诺米品牌管理有限公司校园大使，负责该公司在我校的秋招工作，包括但不限于公司品牌宣传、校园场地申请、求职社群维护等工作，为该公司输送了亟需的营销人才如管培生、买手助理以及部分职能岗人才如生产设计等。&lt;/li&gt;
    &lt;li&gt;2017-09 至 2018-09 担任武汉纺织大学计算机协会副会长和班级副班长。以计算机协会副会长的身份参与成都源码科技公司组织的湘、鄂、川、贵、赣、渝等省市高校的计算机协会线下大型团建活动，提升了在IT方面的见识。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="resume" /><summary type="html">个人信息 姓名：贾志楷 | 求职岗位：Java开发 预计到岗时间：1个月之内 ｜意向城市：上海 📧：2036736521@qq.com | 📱：+86 18295780761 ｜ 🏠：河北省石家庄市辛集市辛集镇车站街凌宇大楼</summary></entry><entry><title type="html">如何部署一个项目</title><link href="http://sliencejoker.github.io/linux/2021/03/20/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAweb%E9%A1%B9%E7%9B%AE.html" rel="alternate" type="text/html" title="如何部署一个项目" /><published>2021-03-20T08:00:00+08:00</published><updated>2021-03-20T08:00:00+08:00</updated><id>http://sliencejoker.github.io/linux/2021/03/20/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAweb%E9%A1%B9%E7%9B%AE</id><content type="html" xml:base="http://sliencejoker.github.io/linux/2021/03/20/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAweb%E9%A1%B9%E7%9B%AE.html">&lt;h1 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;一个正规的web项目部署，tomcat服务和mysql服务分别部署在不同的服务器上，由于自己的黑苹果操作系统无法传输，借用别人的电脑实操了一下项目部署，以便加深自己的印象。&lt;/p&gt;
  &lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;
  &lt;p&gt;1.虚拟机centOS两台，分别装tomcat和mysql。&lt;br /&gt;
2.常用的查询命令，例如查ip，开端口，解压war包。&lt;br /&gt;
3.将自己的web项目打包成war包 &lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;假设条件&quot;&gt;假设条件&lt;/h3&gt;
  &lt;p&gt;centOS虚拟机正常。&lt;br /&gt;
tomcat端口已经改为80&lt;br /&gt;
mysql端口默认3306&lt;/p&gt;
  &lt;h3 id=&quot;开始部署&quot;&gt;开始部署&lt;/h3&gt;
  &lt;p&gt;step1.查询装有tomcat的虚拟机的ip，ip查询命令为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ifconfig&lt;/code&gt;，记住该虚拟机的ip地址，格式为192.168.XXX.XXX。（这样的ip地址实际上为ipv4地址）。&lt;br /&gt;
step2. 开放tomcat服务与主机的连接。首先更改tomcat的端口，该配置文件是tomcat tar.gz包解压缩之后的文件夹里的conf文件夹下的server.xml。
其次放开80端口。执行命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --zone=public --add-port=80/tcp --permanent &lt;/code&gt;，然后重启防火墙服务，执行命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --reload&lt;/code&gt; ，最后检查端口是否放开，执行命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --query-port=80/tcp&lt;/code&gt;，确认端口已放行。最后启动tomcat服务，在主机上打开浏览器直接输入tomcat服务机的ip地址，验证是否可以和主机做连接。&lt;br /&gt;
step3:进入装有mysql的虚拟机，执行开放端口操作。
命令为：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.XXX.XXX&quot; port protocol=&quot;tcp&quot; port=&quot;3306&quot; accept&quot;  &lt;/code&gt;后续重启防火墙服务和检查端口是否正常放行。&lt;br /&gt;
step4:用自己的方式将war包传输到装有tomcat的linux服务机上，假设tomcat解压缩的路径为/home/demo/tomcat，假设war包被你传输在了/home/demo/XXX.war，在终端中依次执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /home/demo&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unzip XXX.war -d /home/demo/tomcat/webapps/XXX&lt;/code&gt; ，这样就成功解压缩war包。&lt;br /&gt;
step5:导入你项目所需要的数据库，同时微调项目部分配置，在浏览器上输入步骤一获取到的ip，对项目进行测试。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;知识点&quot;&gt;知识点&lt;/h3&gt;
  &lt;p&gt;取巧方法，直接干掉linux的防火墙服务，不可取。&lt;br /&gt;
两种放开端口方法的区别：第一种命令如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd --zone=public --add-port=80/tcp --permanent&lt;/code&gt; ，这种开放端口命令的弊端是所有的ip都可以连接这个端口。第二种命令如步骤三的长命令，该命令的优势是指定ip访问端口，可以尽量避免服务器被攻击。&lt;/p&gt;

&lt;/blockquote&gt;</content><author><name></name></author><category term="linux" /><summary type="html">撰写缘由 一个正规的web项目部署，tomcat服务和mysql服务分别部署在不同的服务器上，由于自己的黑苹果操作系统无法传输，借用别人的电脑实操了一下项目部署，以便加深自己的印象。 准备工作 1.虚拟机centOS两台，分别装tomcat和mysql。 2.常用的查询命令，例如查ip，开端口，解压war包。 3.将自己的web项目打包成war包 假设条件 centOS虚拟机正常。 tomcat端口已经改为80 mysql端口默认3306 开始部署 step1.查询装有tomcat的虚拟机的ip，ip查询命令为ifconfig，记住该虚拟机的ip地址，格式为192.168.XXX.XXX。（这样的ip地址实际上为ipv4地址）。 step2. 开放tomcat服务与主机的连接。首先更改tomcat的端口，该配置文件是tomcat tar.gz包解压缩之后的文件夹里的conf文件夹下的server.xml。 其次放开80端口。执行命令firewall-cmd --zone=public --add-port=80/tcp --permanent ，然后重启防火墙服务，执行命令firewall-cmd --reload ，最后检查端口是否放开，执行命令firewall-cmd --query-port=80/tcp，确认端口已放行。最后启动tomcat服务，在主机上打开浏览器直接输入tomcat服务机的ip地址，验证是否可以和主机做连接。 step3:进入装有mysql的虚拟机，执行开放端口操作。 命令为：firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.XXX.XXX&quot; port protocol=&quot;tcp&quot; port=&quot;3306&quot; accept&quot; 后续重启防火墙服务和检查端口是否正常放行。 step4:用自己的方式将war包传输到装有tomcat的linux服务机上，假设tomcat解压缩的路径为/home/demo/tomcat，假设war包被你传输在了/home/demo/XXX.war，在终端中依次执行cd /home/demo，unzip XXX.war -d /home/demo/tomcat/webapps/XXX ，这样就成功解压缩war包。 step5:导入你项目所需要的数据库，同时微调项目部分配置，在浏览器上输入步骤一获取到的ip，对项目进行测试。 知识点 取巧方法，直接干掉linux的防火墙服务，不可取。 两种放开端口方法的区别：第一种命令如firewall-cmd --zone=public --add-port=80/tcp --permanent ，这种开放端口命令的弊端是所有的ip都可以连接这个端口。第二种命令如步骤三的长命令，该命令的优势是指定ip访问端口，可以尽量避免服务器被攻击。</summary></entry><entry><title type="html">Redis安装及服务化启动</title><link href="http://sliencejoker.github.io/linux/2021/03/17/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E6%9C%8D%E5%8A%A1%E5%8C%96%E5%90%AF%E5%8A%A8.html" rel="alternate" type="text/html" title="Redis安装及服务化启动" /><published>2021-03-17T18:00:00+08:00</published><updated>2021-03-17T18:00:00+08:00</updated><id>http://sliencejoker.github.io/linux/2021/03/17/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E6%9C%8D%E5%8A%A1%E5%8C%96%E5%90%AF%E5%8A%A8</id><content type="html" xml:base="http://sliencejoker.github.io/linux/2021/03/17/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E6%9C%8D%E5%8A%A1%E5%8C%96%E5%90%AF%E5%8A%A8.html">&lt;h1 id=&quot;撰写缘由&quot;&gt;撰写缘由&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;这几天在安装redis的时候碰上不少坑，基于问题解决一次到位的原则结合网上各路大神的帖子终于找出Redis安装和服务化启动的最优解，特此记录一下，以备不时之需。&lt;br /&gt;&lt;/p&gt;
  &lt;h1 id=&quot;note&quot;&gt;Note&lt;/h1&gt;
  &lt;p&gt;本教程基于CentOS 7及以上版本安装，其他Linux发行版可以参考，未必当唯一标准进行指导。&lt;br /&gt;
话不多说，安装过程开始：&lt;/p&gt;
  &lt;h3 id=&quot;step1-安装前准备工作&quot;&gt;Step1 安装前准备工作&lt;/h3&gt;
  &lt;p&gt;由于笔者从一干二净的centOS Service无Gui版本开始进行安装，且以root身份登陆，故先安装编译必备的依赖make和gcc。&lt;br /&gt;
yum install make&lt;br /&gt;
yum install gcc&lt;br /&gt;
通过以上命令成功安装编译redis所需依赖，非root用户安装过程中可能存在yum提示权限不足，只需要在命令之前追加sudo即可。&lt;/p&gt;
  &lt;h3 id=&quot;step2-redis安装包的下载解压及编译&quot;&gt;Step2 Redis安装包的下载解压及编译&lt;/h3&gt;
  &lt;p&gt;参考Redis官网指导&lt;a&gt;https://redis.io/download&lt;/a&gt; ，在linux终端中cd到你能记得住的一个文件夹下，最好是home文件夹下，然后执行相关命令，避免麻烦，贴上所需命令：&lt;br /&gt;
cd /home &lt;br /&gt;
wget https://download.redis.io/releases/redis-6.2.1.tar.gz &lt;br /&gt;
tar xzf redis-6.2.1.tar.gz &lt;br /&gt;
cd redis-6.2.1 &lt;br /&gt;
make &lt;br /&gt;
接下来就是终端执行编译过程，最终会在redis-6.2.1文件夹下生成src文件夹，在该文件夹中存在redis服务启动必备的一些文件。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;step3-安装到指定位置&quot;&gt;Step3 安装到指定位置&lt;/h3&gt;
  &lt;p&gt;参考博文&lt;a&gt;https://blog.csdn.net/simonforfuture/article/details/92801822&lt;/a&gt;贴上如下命令&lt;br /&gt;
安装到/usr/local/redis目录下 &lt;br /&gt;
make PREFIX=/usr/local/redis install &lt;br /&gt;
拷贝配置文件
cp redis.conf /usr/local/redis/ &lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;note-1&quot;&gt;Note&lt;/h3&gt;
  &lt;p&gt;如有特殊需求，可以对redis.conf 文件进行适当修改，例如daemonize、databases、port等。&lt;br /&gt;
如需启用客户端连接redis时的密码，取消requirepass foobared该行的注释，并将foobared改为自己所需要的密码。&lt;br /&gt;
如需启用日志文件，找到logfile “” 行并将其更改为logfile “redis.log” ，这样redis会在运行时会生成日志文件。&lt;br /&gt;
如需更改默认6379端口，只需要找到port 6379行并将6379改为你所需要的端口。&lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;step4-服务化启动&quot;&gt;Step4 服务化启动&lt;/h3&gt;
  &lt;p&gt;参考&lt;a href=&quot;https://www.php.cn/redis/458172.html&quot;&gt;redis如何设置开机自启动&lt;/a&gt;该文章，并提出如下补充事项&lt;br /&gt;
note_1:redis_init_script文件在redis tar.gz包解压缩后的文件夹中。&lt;br /&gt;
note_2:由于上述操作已将redis安装至/usr/local/redis/路径之下，故脚本文件的编辑中应做如下修改：&lt;br /&gt;
在#!/bin/sh下添加如下两行&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# chkconfig: 2345 10 90&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# description: Start and Stop redis&lt;/code&gt;&lt;br /&gt;
对照脚本文件中的内容，确保是下所示：&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REDISPORT=6379&lt;/code&gt; 此处请和你redis.conf文件中的端口号相匹配。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXEC=/usr/local/redis/bin/redis-server&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLIEXEC=/usr/local/redis/bin/redis-cli&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CONF=&quot;/usr/local/redis/redis.conf&quot;&lt;/code&gt;&lt;br /&gt;
上述三行为你执行安装到指定目录后的redis相关文件路径，redis-server用于启动redis服务，redis-cli文件用于建立redis客户端连接，redis.conf是redis服务启动的配置文件。&lt;br /&gt;
将redis添加至开机自启动&lt;br /&gt;
chkconfig –add redis&lt;br /&gt;
chkconfig redis on&lt;br /&gt;
为确保redis启动，可继续执行如下命令&lt;br /&gt;
systemctl start redis &lt;br /&gt;&lt;/p&gt;
  &lt;h3 id=&quot;step5-重启并进行检查&quot;&gt;Step5 重启并进行检查&lt;/h3&gt;
  &lt;p&gt;最后reboot你的Linux操作系统，启动后输入systemctl status redis命令查看redis是否开机自启动，当显示Active：active(running)时说明redis已经开机自启动。&lt;/p&gt;
  &lt;h1 id=&quot;note-2&quot;&gt;Note&lt;/h1&gt;
  &lt;p&gt;本次安装不足之处，redis-cli连接时需要进入到/usr/local/redis目录下，执行相关命令。若端口密码进行了修改，则进入redis安装目录下后，执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./bin/redis-cli -p 你的端口号 -a 你的密码&lt;/code&gt;进行连接，连接之后执行ping命令，若结果为PONG，说明正确连接redis服务。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="linux" /><summary type="html">撰写缘由 这几天在安装redis的时候碰上不少坑，基于问题解决一次到位的原则结合网上各路大神的帖子终于找出Redis安装和服务化启动的最优解，特此记录一下，以备不时之需。 Note 本教程基于CentOS 7及以上版本安装，其他Linux发行版可以参考，未必当唯一标准进行指导。 话不多说，安装过程开始： Step1 安装前准备工作 由于笔者从一干二净的centOS Service无Gui版本开始进行安装，且以root身份登陆，故先安装编译必备的依赖make和gcc。 yum install make yum install gcc 通过以上命令成功安装编译redis所需依赖，非root用户安装过程中可能存在yum提示权限不足，只需要在命令之前追加sudo即可。 Step2 Redis安装包的下载解压及编译 参考Redis官网指导https://redis.io/download ，在linux终端中cd到你能记得住的一个文件夹下，最好是home文件夹下，然后执行相关命令，避免麻烦，贴上所需命令： cd /home wget https://download.redis.io/releases/redis-6.2.1.tar.gz tar xzf redis-6.2.1.tar.gz cd redis-6.2.1 make 接下来就是终端执行编译过程，最终会在redis-6.2.1文件夹下生成src文件夹，在该文件夹中存在redis服务启动必备的一些文件。 Step3 安装到指定位置 参考博文https://blog.csdn.net/simonforfuture/article/details/92801822贴上如下命令 安装到/usr/local/redis目录下 make PREFIX=/usr/local/redis install 拷贝配置文件 cp redis.conf /usr/local/redis/ Note 如有特殊需求，可以对redis.conf 文件进行适当修改，例如daemonize、databases、port等。 如需启用客户端连接redis时的密码，取消requirepass foobared该行的注释，并将foobared改为自己所需要的密码。 如需启用日志文件，找到logfile “” 行并将其更改为logfile “redis.log” ，这样redis会在运行时会生成日志文件。 如需更改默认6379端口，只需要找到port 6379行并将6379改为你所需要的端口。 Step4 服务化启动 参考redis如何设置开机自启动该文章，并提出如下补充事项 note_1:redis_init_script文件在redis tar.gz包解压缩后的文件夹中。 note_2:由于上述操作已将redis安装至/usr/local/redis/路径之下，故脚本文件的编辑中应做如下修改： 在#!/bin/sh下添加如下两行 # chkconfig: 2345 10 90 # description: Start and Stop redis 对照脚本文件中的内容，确保是下所示： REDISPORT=6379 此处请和你redis.conf文件中的端口号相匹配。 EXEC=/usr/local/redis/bin/redis-server CLIEXEC=/usr/local/redis/bin/redis-cli CONF=&quot;/usr/local/redis/redis.conf&quot; 上述三行为你执行安装到指定目录后的redis相关文件路径，redis-server用于启动redis服务，redis-cli文件用于建立redis客户端连接，redis.conf是redis服务启动的配置文件。 将redis添加至开机自启动 chkconfig –add redis chkconfig redis on 为确保redis启动，可继续执行如下命令 systemctl start redis Step5 重启并进行检查 最后reboot你的Linux操作系统，启动后输入systemctl status redis命令查看redis是否开机自启动，当显示Active：active(running)时说明redis已经开机自启动。 Note 本次安装不足之处，redis-cli连接时需要进入到/usr/local/redis目录下，执行相关命令。若端口密码进行了修改，则进入redis安装目录下后，执行./bin/redis-cli -p 你的端口号 -a 你的密码进行连接，连接之后执行ping命令，若结果为PONG，说明正确连接redis服务。</summary></entry><entry><title type="html">my-first-post</title><link href="http://sliencejoker.github.io/jekyll/2021/03/16/my-first-post.html" rel="alternate" type="text/html" title="my-first-post" /><published>2021-03-16T20:48:23+08:00</published><updated>2021-03-16T20:48:23+08:00</updated><id>http://sliencejoker.github.io/jekyll/2021/03/16/my-first-post</id><content type="html" xml:base="http://sliencejoker.github.io/jekyll/2021/03/16/my-first-post.html">&lt;h1 id=&quot;jekyll初次使用体验&quot;&gt;jekyll初次使用体验&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;跟着网上的教程乱七八糟的，终于搭好了自己的博客。
感谢少数派的教程，感谢jekyllThemes大佬们的贡献，
感谢jekyll官网的文档指点。
在本次搭建博客的过程中，遇到了几个比较坑的问题，
附上问题和解决办法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;问题及解决办法&quot;&gt;问题及解决办法&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Q1:jekyll command not find&lt;br /&gt;
A1:参考jekyll官网，给出的解决方案是：&lt;br /&gt;
在终端环境配置文件中(example:zshrc)添加环境变量&lt;br /&gt;
export GEM_HOME=$HOME/gems&lt;br /&gt;
export PATH=$HOME/gems/bin:$PATH&lt;br /&gt;
添加完成后重新执行gem install jekyll命令即可&lt;br /&gt;
Q2:Error cannot load such file –webrick(LoadError)&lt;br /&gt;
A2:在博客项目文件夹下执行命令bundle add webrick&lt;br /&gt;
Q3：配置问题&lt;br /&gt;
A3:这是个细心活，缺少相关依赖，终端中gem安装缺少的包，在博客模板项目配置文件中注意版本号相匹配&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;note&quot;&gt;Note&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;1.尽量避免sudo gem XXX 的方式&lt;br /&gt;
2.参考清华大学开源镜像站更改ruby国内源，加快下载速度&lt;br /&gt;
&lt;a&gt;https://mirrors.tuna.tsinghua.edu.cn/help/rubygems/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="jekyll" /><summary type="html">jekyll初次使用体验 跟着网上的教程乱七八糟的，终于搭好了自己的博客。 感谢少数派的教程，感谢jekyllThemes大佬们的贡献， 感谢jekyll官网的文档指点。 在本次搭建博客的过程中，遇到了几个比较坑的问题， 附上问题和解决办法。</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://sliencejoker.github.io/jekyll/update/2020/01/02/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-01-02T18:31:29+08:00</published><updated>2020-01-02T18:31:29+08:00</updated><id>http://sliencejoker.github.io/jekyll/update/2020/01/02/welcome-to-jekyll</id><content type="html" xml:base="http://sliencejoker.github.io/jekyll/update/2020/01/02/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>